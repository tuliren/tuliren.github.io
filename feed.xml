<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>海盘车的领地</title>
    <link>http://tuliren.github.io/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Fri, 27 Oct 2017 09:46:49 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Self Driving Car - 04 Introduction to Neural Networks</title>
      <link>http://tuliren.github.io/2017/10/27/sdr-04-introduction-to-neural-networks/</link>
      <guid>http://tuliren.github.io/2017/10/27/sdr-04-introduction-to-neural-networks/</guid>
      <pubDate>Fri, 27 Oct 2017 02:31:48 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;/2017/10/05/sdr-00-self-driving-car-syllabus&quot;&gt;Self Driving Car Syllabus&lt;/a&gt;&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="/2017/10/05/sdr-00-self-driving-car-syllabus">Self Driving Car Syllabus</a></p>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/27/sdr-04-introduction-to-neural-networks/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Self Driving Car - 02 Project Report - Finding Lane Lines on the Road</title>
      <link>http://tuliren.github.io/2017/10/27/sdr-02-project-report/</link>
      <guid>http://tuliren.github.io/2017/10/27/sdr-02-project-report/</guid>
      <pubDate>Fri, 27 Oct 2017 01:07:48 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;/2017/10/05/sdr-00-self-driving-car-syllabus&quot;&gt;Self Driving Car Syllabus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Links&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.co
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="/2017/10/05/sdr-00-self-driving-car-syllabus">Self Driving Car Syllabus</a></p><p>Links</p><ul><li><a href="https://github.com/tuliren/CarND-LaneLines-P1" target="_blank" rel="external">Project repository</a></li><li><a href="https://github.com/tuliren/CarND-LaneLines-P1/blob/master/P1.ipynb" target="_blank" rel="external">Python notebook</a></li><li><a href="https://github.com/tuliren/CarND-LaneLines-P1/blob/master/project_report.md" target="_blank" rel="external">Original report</a></li></ul><h2 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h2><p>The goals / steps of this project are the following:</p><ul><li>Make a pipeline that finds lane lines on the road</li><li>Reflect on the work in a written report</li></ul><h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><h3 id="Image-analysis-pipeline"><a href="#Image-analysis-pipeline" class="headerlink" title="Image analysis pipeline"></a>Image analysis pipeline</h3><p><img src="https://raw.githubusercontent.com/tuliren/CarND-LaneLines-P1/master/test_images_output/intermediate-solidWhiteCurve.jpg" alt=""></p><h3 id="Lane-detection"><a href="#Lane-detection" class="headerlink" title="Lane detection"></a>Lane detection</h3><table><thead><tr><th>Solid White Line</th><th>Solid Yellow Line</th><th>Challenge</th></tr></thead><tbody><tr><td><img src="https://raw.githubusercontent.com/tuliren/CarND-LaneLines-P1/master/test_videos_output/solidWhiteRight.gif" alt=""></td><td><img src="https://raw.githubusercontent.com/tuliren/CarND-LaneLines-P1/master/test_videos_output/solidYellowLeft.gif" alt=""></td><td><img src="https://raw.githubusercontent.com/tuliren/CarND-LaneLines-P1/master/test_videos_output/challenge.gif" alt=""></td></tr><tr><td><a href="https://github.com/tuliren/CarND-LaneLines-P1/blob/master/test_videos_output/solidWhiteRight.mp4" target="_blank" rel="external">Video</a></td><td><a href="https://github.com/tuliren/CarND-LaneLines-P1/blob/master/test_videos_output/solidYellowLeft.mp4" target="_blank" rel="external">Video</a></td><td><a href="https://github.com/tuliren/CarND-LaneLines-P1/blob/master/test_videos_output/challenge.mp4" target="_blank" rel="external">Video</a></td></tr></tbody></table><h2 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><p><a href="https://github.com/tuliren/CarND-LaneLines-P1/blob/master/P1.ipynb" target="_blank" rel="external">Notebook</a></p><h2 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h2><h3 id="Lane-detection-pipeline"><a href="#Lane-detection-pipeline" class="headerlink" title="Lane detection pipeline"></a>Lane detection pipeline</h3><p>My pipeline consisted of the following steps:</p><ul><li>Convert the image to gray scale.</li><li>Apply Gaussian blur.</li><li>Perform Canny transform to detect edges.</li><li>Create a polygon image mask to focus on the lane line area.</li><li>Use Hough line transform to detect lines in the masked area.</li></ul><p>In order to draw a single line on the left and right lanes, the <code>draw_lines</code> function is modified as described below.</p><ul><li>Lines are separated into two groups, one group for lines with positive slopes, the other with negative slopes.</li><li>Within each group, all lines are consolidated into one line as follows (in the <code>draw_one_lane_line</code> function).<ul><li>Lines with proper slope are selected. The slope range is (0.35, 0.85) and (-0.85, -0.35).</li><li>Lines with positive slopes must reside on the left hand side of the image, vice versa for lines with negative slopes. The criteria is that the intercept of a line with the top of the mask polygon should be roughly on one side of the image.</li><li>Lines are then sorted by slope.</li><li>The line with median slope is chosen as the pivot line.</li><li>All lines close to the pivot line are selected. Here closeness means their difference in slope is less than 0.5.</li><li>The slope and intercept values of the selected lines are averaged together to get a mean slope and intercept, which is considered the final lane line.<ul><li>I choose to average on all lines close to the pivot line hoping that this will make the final lane line more “stabilized”, meaning that it does not shake too much from frame to frame in the video. But it is not as useful as I thought. The result does not change much if I just use the pivot line as the final output.</li></ul></li><li>Intercepts of this lane line and the masked area are calculated, and then drawn to the image.</li></ul></li></ul><h3 id="Potential-shortcomings-and-possible-improvements"><a href="#Potential-shortcomings-and-possible-improvements" class="headerlink" title="Potential shortcomings and possible improvements"></a>Potential shortcomings and possible improvements</h3><ul><li><p>Generated lines shakes from frame to frame</p><ul><li>The lane lines from my video output shake a lot in the video. I noticed that whenever there are small white dots besides the actual line, the generated line tends to shift slightly towards those dots. They are not as stable as those shown in the sample video. <ul><li>A <strong>possible improvement</strong> is to create every new line based on the line in the previous frame. This is based on the assumption that actual lane line does not have sharp curves, so the slope of the generated lines should not differ significantly from one frame to another.</li></ul></li></ul></li><li><p>Generated lines are not robust to road color and shadows</p><ul><li><p>From the output of the challenge video, my current pipeline is not robust when the road has a light color and it is sunny. For those cases, the actual lane line almost disappears in gray scale and Canny image. Here is an example:<br><img src="https://raw.githubusercontent.com/tuliren/CarND-LaneLines-P1/master/test_images_output/intermediate-lightRoadColor.jpg" alt=""></p><ul><li>A <strong>possible improvement</strong> is to enhance white and yellow color before converting the image to gray scale.</li></ul></li><li><p>Also shadows on the road can severely interfere with lane detection. Shadow introduces considerable amount of white dots in the Canny image such that the correct line is no longer the median line.<br><img src="https://raw.githubusercontent.com/tuliren/CarND-LaneLines-P1/master/test_images_output/intermediate-roadShadow.jpg" alt=""></p><ul><li>A <strong>possible improvement</strong> is to further tune the Canny thresholds. Another possible approach is to select the pivot line not by simply choosing the median one, but chose one that appears in a cluster of lines.</li></ul></li></ul></li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/27/sdr-02-project-report/#disqus_thread</comments>
    </item>
    
    <item>
      <title>读书笔记：如何高效学习（Learn More, Study Less）</title>
      <link>http://tuliren.github.io/2017/10/10/reading-learn-more-study-less/</link>
      <guid>http://tuliren.github.io/2017/10/10/reading-learn-more-study-less/</guid>
      <pubDate>Tue, 10 Oct 2017 22:04:37 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;链接：&lt;a href=&quot;https://book.douban.com/subject/25783654/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何高效学习&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;主旨&quot;&gt;&lt;a href=&quot;#主旨&quot; class=&quot;hea
        
      
      </description>
      
      <content:encoded><![CDATA[<p>链接：<a href="https://book.douban.com/subject/25783654/" target="_blank" rel="external">如何高效学习</a></p><h1 id="主旨"><a href="#主旨" class="headerlink" title="主旨"></a>主旨</h1><ul><li>学得好的人寻找知识间的关联，学得慢的人只会死记硬背。</li><li>整体性学习（holistic learning）</li></ul><hr><h1 id="第一部分-整体性学习策略"><a href="#第一部分-整体性学习策略" class="headerlink" title="第一部分 整体性学习策略"></a>第一部分 整体性学习策略</h1><h2 id="整体性学习的基础"><a href="#整体性学习的基础" class="headerlink" title="整体性学习的基础"></a>整体性学习的基础</h2><ul><li>将知识关联起来已达到记忆和应用知识的目的，相关技术有比喻、内在化、基于流程的记事和画图表。</li></ul><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><ul><li>建立知识结构，就是要在各种知识间建立尽可能多的联系。</li><li>感知结构，生活经验：图像、声音、情感。是其他结构的基础。</li><li>关系结构：故事、人物、人物间相互关系。</li><li>基础数学</li></ul><h2 id="模型：简化的结构。"><a href="#模型：简化的结构。" class="headerlink" title="模型：简化的结构。"></a>模型：简化的结构。</h2><h2 id="高速公路：结构与结构间的联系。"><a href="#高速公路：结构与结构间的联系。" class="headerlink" title="高速公路：结构与结构间的联系。"></a>高速公路：结构与结构间的联系。</h2><h2 id="整体性学习的顺序"><a href="#整体性学习的顺序" class="headerlink" title="整体性学习的顺序"></a>整体性学习的顺序</h2><ol><li>获取<ul><li>目标：简化、容量、速度。</li><li>测试问题：以前有没有学过这个知识？</li><li>可能缺陷<ul><li>阅读、听讲速度慢</li><li>需要反复阅读</li></ul></li><li>缺陷原因<ul><li>学习习惯不好</li><li>不好的笔记习惯<ul><li>太多：没时间思考</li><li>太少：信息丢失</li></ul></li><li>不理解基本名词和语法</li></ul></li></ul></li><li>理解<ul><li>测试问题：字面含义是什么？</li></ul></li><li>拓展：形成模型、高速公路和广泛的联系，建立结构。<ul><li>深度拓展：知识怎么得来的。</li><li>横向拓展：类似的知识有哪些。</li><li>总想拓展：与不相关知识相联系。比喻、内在化。</li><li>测试问题：知识从何而来，与哪些知识有关？</li><li>可能缺陷：缺少灵活性，不能举一反三（比如公式条件一旦变动，就不会使用）。</li></ul></li><li>纠错：删除无效的联系。<ul><li>阅读相反的观点。</li><li>把结论放入现实世界检验。</li><li>测试问题：删除了哪些不恰当的联系？</li><li>可能缺陷：错误的联系太多。</li></ul></li><li>应用：通过比较知识在现实中的运行，调整结构，修正理解。<ul><li>测试问题：如何应用？</li><li>可能缺陷：不能在真实世界运用知识（比如不能把公式套用在实际例子中，注意与拓展缺陷的区别）。</li></ul></li></ol><ul><li>测试：以上每一步都需要测试。</li></ul><h2 id="信息的结构"><a href="#信息的结构" class="headerlink" title="信息的结构"></a>信息的结构</h2><ol><li>随意信息<ul><li>一些列事实、日期、定义或规则，缺少逻辑分类。</li><li>联想法、挂钩法、压缩法。</li><li>弱结构信息，难以整体学习，学习时间长，实际应用价值局限。</li></ul></li><li>观点信息<ul><li>存在争议的信息。</li><li>难点在于获取阶段，需要检查大量信息寻找其中模式。</li><li>速读，阅读后提取关键思想。</li></ul></li><li>过程信息<ul><li>指导行动的信息。</li><li>确立正确的背景概念。</li><li>不断练习。</li><li>改进模型<ul><li>内在化、比喻、图表、模型纠错</li></ul></li><li>强结构信息。</li></ul></li><li>具体信息<ul><li>实际中可以观察、听到、触到的信息。</li><li>强结构信息。</li></ul></li><li>抽象信息<ul><li>缺少与感官直接联系的信息。</li></ul></li></ol><hr><h1 id="第二部分-整体性学习技术"><a href="#第二部分-整体性学习技术" class="headerlink" title="第二部分 整体性学习技术"></a>第二部分 整体性学习技术</h1><h2 id="获取知识"><a href="#获取知识" class="headerlink" title="获取知识"></a>获取知识</h2><ul><li>快速阅读<ul><li>指读法<ul><li>眼睛跟随手指的移动</li></ul></li><li>练习阅读法<ul><li>训练自己以尽可能快的速度理解所读内容</li><li>以 3 分钟为限，记录每分钟阅读的字词数</li><li>统计在 3 分钟内正确掌握和错误掌握的知识点。</li></ul></li><li>积极阅读法<ul><li>强调深入理解材料</li><li>边读边记录<ul><li>这一节主要观点</li><li>怎么才能记住主要观点</li><li>怎样拓展、应用主要观点</li></ul></li></ul></li></ul></li><li>笔记流<ul><li>在知识点之间画箭头</li><li>减少笔记内容</li><li>强调知识点间的联系</li></ul></li></ul><h2 id="联系观点"><a href="#联系观点" class="headerlink" title="联系观点"></a>联系观点</h2><ul><li>比喻</li><li>内在化<ul><li>在脑中把各种感知（比如图像）与知识联系起来。</li></ul></li><li>图表法<ul><li>简化的内在化</li></ul></li></ul><h2 id="随意信息处理"><a href="#随意信息处理" class="headerlink" title="随意信息处理"></a>随意信息处理</h2><ul><li>联想法<ul><li>将一系列观点串在一起，一旦进入其中的一个环节，就能轻易地到达其他环节。</li><li>比如：一嗅二视三动眼</li></ul></li><li>挂钩法<ul><li>将每一个观点与一个特殊的数字联系在一起</li></ul></li><li>信息压缩技术<ul><li>记忆术<ul><li>用短语或单词来存储数个信息</li></ul></li><li>图像联系<ul><li>把几个信息联系起来，用一张图来表示</li></ul></li><li>笔记压缩<ul><li>用简化的语句把大量笔记记录在一张纸上</li></ul></li></ul></li></ul><h2 id="知识拓展"><a href="#知识拓展" class="headerlink" title="知识拓展"></a>知识拓展</h2><ul><li>实际应用</li><li>模型纠错<ul><li>即实践</li><li>不要重复训练同类问题</li></ul></li><li>以项目为基础学习<ul><li>设定需要 1-3 个月达成的目标</li></ul></li></ul><h2 id="整体性学习的实际应用：费曼技巧"><a href="#整体性学习的实际应用：费曼技巧" class="headerlink" title="整体性学习的实际应用：费曼技巧"></a>整体性学习的实际应用：费曼技巧</h2><ul><li>选择一个要学习的概念</li><li>设想自己在教授别人这个知识点</li><li>碰到疑惑时，寻找解答</li><li>用简单的语言和比喻修正自己的解释</li></ul><hr><h1 id="第三部分-超越整体性学习"><a href="#第三部分-超越整体性学习" class="headerlink" title="第三部分 超越整体性学习"></a>第三部分 超越整体性学习</h1><h2 id="如何“学得少”"><a href="#如何“学得少”" class="headerlink" title="如何“学得少”"></a>如何“学得少”</h2><h2 id="能量管理"><a href="#能量管理" class="headerlink" title="能量管理"></a>能量管理</h2><ul><li>增加能量储备<ul><li>运动</li><li>睡眠</li><li>血糖平稳的饮食</li><li>水</li><li>少吃多餐</li></ul></li><li>将日程表由线性改为循环式<ul><li>线性：平均分配工作时间</li><li>循环：集中小部分时间做大部分工作</li><li>一周休息一天，什么事都不做</li><li>晚上不干活</li><li>设定 90 分钟集中精力做事</li></ul></li></ul><h2 id="不要“学习”"><a href="#不要“学习”" class="headerlink" title="不要“学习”"></a>不要“学习”</h2><ul><li>学习是一个模糊的概念，给人带来精神压力</li><li>精确定义学习过程中的活动<ul><li>阅读</li><li>作业和笔记</li><li>用整体性学习处理难点</li><li>笔记流</li></ul></li></ul><h2 id="绝不拖延时间"><a href="#绝不拖延时间" class="headerlink" title="绝不拖延时间"></a>绝不拖延时间</h2><h2 id="Weekly-daily-goal"><a href="#Weekly-daily-goal" class="headerlink" title="Weekly / daily goal"></a>Weekly / daily goal</h2><ul><li>每周周末，列出下周所有任务的清单</li><li>每天晚上，检查周计划，列出第二天的每日目标清单</li></ul><h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><ul><li>批处理时间控制在 3 小时以内</li><li>一次性完成作业</li><li>提高注意力阈值</li></ul><h2 id="有组织"><a href="#有组织" class="headerlink" title="有组织"></a>有组织</h2><h2 id="自我教育"><a href="#自我教育" class="headerlink" title="自我教育"></a>自我教育</h2><h2 id="习惯"><a href="#习惯" class="headerlink" title="习惯"></a>习惯</h2><ul><li>每日阅读</li><li>每日练习</li><li>每日目标</li><li>在特殊时段建立习惯</li></ul><h2 id="设置学习目标"><a href="#设置学习目标" class="headerlink" title="设置学习目标"></a>设置学习目标</h2><ul><li>目标要写下来</li><li>目标客观化</li><li>设置 deadline</li><li>将目标转化为 weekly / daily goal</li><li>每周检查目标完成情况</li></ul><hr><h1 id="第四部分-整体性学习的总结"><a href="#第四部分-整体性学习的总结" class="headerlink" title="第四部分 整体性学习的总结"></a>第四部分 整体性学习的总结</h1>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/10/reading-learn-more-study-less/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Self Driving Car - 02 Project - Finding Lane Lines on the Road</title>
      <link>http://tuliren.github.io/2017/10/08/sdr-02-project-finding-lane-lines/</link>
      <guid>http://tuliren.github.io/2017/10/08/sdr-02-project-finding-lane-lines/</guid>
      <pubDate>Sun, 08 Oct 2017 22:27:53 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;/2017/10/05/sdr-00-self-driving-car-syllabus&quot;&gt;Self Driving Car Syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;heade
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="/2017/10/05/sdr-00-self-driving-car-syllabus">Self Driving Car Syllabus</a></p><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Two methods</p><ul><li><a href="https://github.com/tuliren/self-driving-car-nd/blob/master/01-lane-line-detection/color_selection_and_region.ipynb" target="_blank" rel="external">Color selection</a></li><li><a href="https://github.com/tuliren/self-driving-car-nd/blob/master/01-lane-line-detection/canny_edge_detection.ipynb" target="_blank" rel="external">Edge detection</a></li></ul><h1 id="Setting-up-the-Problem"><a href="#Setting-up-the-Problem" class="headerlink" title="Setting up the Problem"></a>Setting up the Problem</h1><p>Features for lane lines detection</p><ul><li>Color</li><li>Shape</li><li>Orientation</li><li>Position</li></ul><h1 id="Color-Selection"><a href="#Color-Selection" class="headerlink" title="Color Selection"></a>Color Selection</h1><ul><li>Color channel<ul><li>0 darkest possible value</li><li>255 brightest possible value</li><li>White in RGB: <code>[255, 255, 255]</code></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="comment"># Read in the image</span></div><div class="line">image = mpimg.imread(<span class="string">'test.jpg'</span>)</div><div class="line"></div><div class="line"><span class="comment"># Grab the x and y size and make a copy of the image</span></div><div class="line">ysize = image.shape[<span class="number">0</span>]</div><div class="line">xsize = image.shape[<span class="number">1</span>]</div><div class="line">color_select = np.copy(image)</div><div class="line"></div><div class="line"><span class="comment"># Define color selection criteria</span></div><div class="line"><span class="comment">###### MODIFY THESE VARIABLES TO MAKE YOUR COLOR SELECTION</span></div><div class="line">red_threshold = <span class="number">195</span></div><div class="line">green_threshold = <span class="number">195</span></div><div class="line">blue_threshold = <span class="number">195</span></div><div class="line"><span class="comment">######</span></div><div class="line"></div><div class="line">rgb_threshold = [red_threshold, green_threshold, blue_threshold]</div><div class="line"></div><div class="line"><span class="comment"># Do a boolean or with the "|" character to identify</span></div><div class="line"><span class="comment"># pixels below the thresholds</span></div><div class="line">thresholds = (image[:,:,<span class="number">0</span>] &lt; rgb_threshold[<span class="number">0</span>]) \</div><div class="line">            | (image[:,:,<span class="number">1</span>] &lt; rgb_threshold[<span class="number">1</span>]) \</div><div class="line">            | (image[:,:,<span class="number">2</span>] &lt; rgb_threshold[<span class="number">2</span>])</div><div class="line">color_select[thresholds] = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</div><div class="line"></div><div class="line"><span class="comment"># Display the image                 </span></div><div class="line">plt.imshow(color_select)</div><div class="line">plt.show()</div><div class="line"></div><div class="line"><span class="comment"># Uncomment the following code if you are running the code locally and wish to save the image</span></div><div class="line">mpimg.imsave(<span class="string">"color-selection.png"</span>, color_select)</div></pre></td></tr></table></figure><table><thead><tr><th>Original</th><th>After color selection</th></tr></thead><tbody><tr><td><img src="/images/2017-10-08-sdr-project-finding-lane-lines/color-selection-original.jpg" width="492" height="276"></td><td><img src="/images/2017-10-08-sdr-project-finding-lane-lines/color-selection-after-color-selection.png" class="|" width="492" height="276"></td></tr></tbody></table><h1 id="Region-Masking"><a href="#Region-Masking" class="headerlink" title="Region Masking"></a>Region Masking</h1><p>Add a criterion to only consider pixels for color selection in the region where we expect to find the lane lines:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="comment"># Read in the image</span></div><div class="line">image = mpimg.imread(<span class="string">'test.jpg'</span>)</div><div class="line"></div><div class="line"><span class="comment"># Grab the x and y size and make a copy of the image</span></div><div class="line">ysize = image.shape[<span class="number">0</span>]</div><div class="line">xsize = image.shape[<span class="number">1</span>]</div><div class="line">color_select = np.copy(image)</div><div class="line">line_image = np.copy(image)</div><div class="line"></div><div class="line"><span class="comment"># Define color selection criteria</span></div><div class="line"><span class="comment"># MODIFY THESE VARIABLES TO MAKE YOUR COLOR SELECTION</span></div><div class="line">red_threshold = <span class="number">200</span></div><div class="line">green_threshold = <span class="number">200</span></div><div class="line">blue_threshold = <span class="number">200</span></div><div class="line"></div><div class="line">rgb_threshold = [red_threshold, green_threshold, blue_threshold]</div><div class="line"></div><div class="line"><span class="comment"># Define the vertices of a triangular mask.</span></div><div class="line"><span class="comment"># Keep in mind the origin (x=0, y=0) is in the upper left</span></div><div class="line"><span class="comment"># MODIFY THESE VALUES TO ISOLATE THE REGION </span></div><div class="line"><span class="comment"># WHERE THE LANE LINES ARE IN THE IMAGE</span></div><div class="line">left_bottom = [<span class="number">0</span>, ysize]</div><div class="line">right_bottom = [xsize, ysize]</div><div class="line">apex = [xsize/<span class="number">2</span>, ysize * <span class="number">0.55</span>]</div><div class="line"></div><div class="line"><span class="comment"># Perform a linear fit (y=Ax+B) to each of the three sides of the triangle</span></div><div class="line"><span class="comment"># np.polyfit returns the coefficients [A, B] of the fit</span></div><div class="line">fit_left = np.polyfit((left_bottom[<span class="number">0</span>], apex[<span class="number">0</span>]), (left_bottom[<span class="number">1</span>], apex[<span class="number">1</span>]), <span class="number">1</span>)</div><div class="line">fit_right = np.polyfit((right_bottom[<span class="number">0</span>], apex[<span class="number">0</span>]), (right_bottom[<span class="number">1</span>], apex[<span class="number">1</span>]), <span class="number">1</span>)</div><div class="line">fit_bottom = np.polyfit((left_bottom[<span class="number">0</span>], right_bottom[<span class="number">0</span>]), (left_bottom[<span class="number">1</span>], right_bottom[<span class="number">1</span>]), <span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="comment"># Mask pixels below the threshold</span></div><div class="line">color_thresholds = (image[:,:,<span class="number">0</span>] &lt; rgb_threshold[<span class="number">0</span>]) | \</div><div class="line">                    (image[:,:,<span class="number">1</span>] &lt; rgb_threshold[<span class="number">1</span>]) | \</div><div class="line">                    (image[:,:,<span class="number">2</span>] &lt; rgb_threshold[<span class="number">2</span>])</div><div class="line"></div><div class="line"><span class="comment"># Find the region inside the lines</span></div><div class="line">XX, YY = np.meshgrid(np.arange(<span class="number">0</span>, xsize), np.arange(<span class="number">0</span>, ysize))</div><div class="line">region_thresholds = (YY &gt; (XX*fit_left[<span class="number">0</span>] + fit_left[<span class="number">1</span>])) &amp; \</div><div class="line">                    (YY &gt; (XX*fit_right[<span class="number">0</span>] + fit_right[<span class="number">1</span>])) &amp; \</div><div class="line">                    (YY &lt; (XX*fit_bottom[<span class="number">0</span>] + fit_bottom[<span class="number">1</span>]))</div><div class="line">                    </div><div class="line"><span class="comment"># Mask color and region selection</span></div><div class="line">color_select[color_thresholds | ~region_thresholds] = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</div><div class="line">print(<span class="string">'Select white line'</span>)</div><div class="line">plt.imshow(color_select)</div><div class="line">plt.savefig(<span class="string">'color-region-select-white-line.png'</span>)</div><div class="line">plt.show()</div><div class="line">print()</div><div class="line"></div><div class="line"><span class="comment"># Color pixels red where both color and region selections met</span></div><div class="line">line_image[~color_thresholds &amp; region_thresholds] = [<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>]</div><div class="line">print(<span class="string">'Highlight line'</span>)</div><div class="line">plt.imshow(line_image)</div><div class="line">plt.show()</div><div class="line">print()</div><div class="line"></div><div class="line"><span class="comment"># Display the image and show region and color selections</span></div><div class="line">plt.imshow(image)</div><div class="line">x = [left_bottom[<span class="number">0</span>], right_bottom[<span class="number">0</span>], apex[<span class="number">0</span>], left_bottom[<span class="number">0</span>]]</div><div class="line">y = [left_bottom[<span class="number">1</span>], right_bottom[<span class="number">1</span>], apex[<span class="number">1</span>], left_bottom[<span class="number">1</span>]]</div><div class="line">plt.plot(x, y, <span class="string">'b--'</span>, lw=<span class="number">2</span>)</div><div class="line"><span class="comment"># plt.imshow(color_select)</span></div><div class="line">plt.imshow(line_image)</div><div class="line">print(<span class="string">'Combined'</span>)</div><div class="line">plt.savefig(<span class="string">'color-region-combined.png'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure></p><table><thead><tr><th>Region masking</th><th>Combined</th></tr></thead><tbody><tr><td><img src="/images/2017-10-08-sdr-project-finding-lane-lines/color-region-select-white-line.png" width="492" height="276"></td><td><img src="/images/2017-10-08-sdr-project-finding-lane-lines/color-region-combined.png" class="|" width="492" height="276"></td></tr></tbody></table><h1 id="Finding-Lines-of-Any-Color"><a href="#Finding-Lines-of-Any-Color" class="headerlink" title="Finding Lines of Any Color"></a>Finding Lines of Any Color</h1><ul><li>Problem with color selection:<ul><li>Different color</li><li>Lighting conditions (day, night)</li></ul></li><li>Detection with computer vision</li></ul><h1 id="Canny-Edge-Detection"><a href="#Canny-Edge-Detection" class="headerlink" title="Canny Edge Detection"></a>Canny Edge Detection</h1><ul><li>John Canny</li><li>Steps<ul><li>Convert to gray scale</li><li>Compute the gradient</li></ul></li><li>Brightness of each pixel corresponds to the strength of the gradient at that point.</li><li>Find edges by tracing out the pixels that follow the strongest gradients.</li><li>Image gradient<ul><li>How fast pixel values are changing at each point in an image</li><li>Which direction they are changing most rapidly</li></ul></li><li><code>edges_output = cv2.Canny(gray_input, low_threshold, high_threshold)</code><ul><li>Detect strong edges (strong gradient) pixels above the <code>high_threshold</code></li><li>Reject pixels below the <code>low_threshold</code></li><li>Pixels with values between the <code>low_theshold</code> and <code>high_threshold</code> will be included as long as they are connected to strong edges.</li><li>Output<ul><li>White pixels tracing out the detected edges</li><li>Black pixels everywhere else</li></ul></li><li>Thresholds<ul><li>Gray image: 8-bit, value range: <code>[0, 2^8-1] = [0, 255]</code></li><li>Possible value differences from pixel to pixel: on the scale of tens or hundreds</li><li>Threshold range should match this scale</li><li>Ratio of <code>low_threshold</code> to <code>high_threshold</code>: <code>1:2</code> or <code>1:3</code></li></ul></li></ul></li><li>Gaussian smoothing<ul><li>Applied before <code>Canny</code></li><li>Suppress noise and spurious gradients by averaging</li><li><code>cv2.Canny</code> applies Gaussian smoothing internally</li><li><code>kernel_size</code><ul><li>Area to be smoothed</li><li>Any odd number</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"></div><div class="line"><span class="comment"># Read in the image</span></div><div class="line">image = mpimg.imread(<span class="string">'exit-ramp.jpg'</span>)</div><div class="line">print(<span class="string">'Original'</span>)</div><div class="line">plt.imshow(image)</div><div class="line">plt.show()</div><div class="line"></div><div class="line"><span class="comment"># Convert to grayscale</span></div><div class="line">gray = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)</div><div class="line">print(<span class="string">'Gray image'</span>)</div><div class="line">plt.imshow(gray, cmap=<span class="string">'gray'</span>)</div><div class="line">plt.savefig(<span class="string">'canny-edge-gray.png'</span>)</div><div class="line">plt.show()</div><div class="line"></div><div class="line"><span class="comment"># Define a kernel size for Gaussian smoothing / blurring</span></div><div class="line"><span class="comment"># Note: this step is optional as cv2.Canny() applies a 5x5 Gaussian internally</span></div><div class="line">kernel_size = <span class="number">5</span></div><div class="line">blur_gray = cv2.GaussianBlur(gray, (kernel_size, kernel_size), <span class="number">0</span>)</div><div class="line"></div><div class="line">print(<span class="string">'After Gaussian Blur'</span>)</div><div class="line">plt.imshow(blur_gray, cmap=<span class="string">'gray'</span>)</div><div class="line">plt.savefig(<span class="string">'canny-edge-gaussian-blur.png'</span>)</div><div class="line">plt.show()</div><div class="line"></div><div class="line"><span class="comment"># Define parameters for Canny and run it</span></div><div class="line"><span class="comment"># <span class="doctag">NOTE:</span> if you try running this code you might want to change these!</span></div><div class="line">low_threshold = <span class="number">50</span></div><div class="line">high_threshold = <span class="number">150</span></div><div class="line">edges = cv2.Canny(blur_gray, low_threshold, high_threshold)</div><div class="line"></div><div class="line"><span class="comment"># Display the image</span></div><div class="line">print(<span class="string">'Canny Edge Detection'</span>)</div><div class="line">plt.imshow(edges, cmap=<span class="string">'Greys_r'</span>)</div><div class="line">plt.savefig(<span class="string">'canny-edge-canny.png'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure><ul><li>Original<img src="/images/2017-10-08-sdr-project-finding-lane-lines/canny-edge-original.jpg" width="492" height="276"></li><li>Gray image<img src="/images/2017-10-08-sdr-project-finding-lane-lines/canny-edge-gray.png" width="492" height="276"></li><li>After Gaussian Blur<img src="/images/2017-10-08-sdr-project-finding-lane-lines/canny-edge-gaussian-blur.png" width="492" height="276"></li><li>Canny Edge Detection<img src="/images/2017-10-08-sdr-project-finding-lane-lines/canny-edge-canny.png" width="492" height="276"></li></ul><h1 id="Hough-Transform"><a href="#Hough-Transform" class="headerlink" title="Hough Transform"></a>Hough Transform</h1><ul><li>Hough space<ul><li>Paul Hough</li><li>Represent <code>x</code> vs <code>y</code> lines (<code>y = mx + b</code>) as point <code>(m, b)</code> in <code>m</code> vs <code>b</code> space<ul><li>Parallel lines have same <code>m</code></li></ul></li><li>A single point <code>(x, y)</code> corresponds to line <code>b = y - xm</code> in Hough space<ul><li>Two points in image space corresponds to two <strong>intersecting</strong> lines in Hough space</li><li>The intersect point represents the line determined by the two points in image space</li></ul></li></ul></li><li>Finding lines in image space is equivalent to detecting intersecting lines in Hough space<ul><li>Divide Hough space into grid</li><li>Define intersecting lines as all lines passing through a given grid cell</li></ul></li><li><code>m</code> is undefined when the line is vertical.<ul><li>Use Polar coordinate system instead</li><li><code>ρ = x cos θ + y sin θ</code><ul><li><code>ρ</code> (rho): distance from origin to the line</li><li><code>θ</code> (theta): angle from origin to the line (<code>[-90°, 90°]</code>)</li></ul></li><li>Points are represented by <code>sine</code> curves in Hough space</li><li>Reference: <a href="https://alyssaq.github.io/2014/understanding-hough-transform/" target="_blank" rel="external">Understanding Hough Transform</a></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">lines = cv2.HoughLinesP(</div><div class="line">    edges,</div><div class="line">    rho,</div><div class="line">    theta,</div><div class="line">    threshold,</div><div class="line">    np.array([]),</div><div class="line">    min_line_len,</div><div class="line">    max_line_gap</div><div class="line">)</div></pre></td></tr></table></figure><ul><li><code>rho</code> and <code>theta</code>: distance and angular resolution of grid in Hough space</li><li><code>threshold</code>: minimum number of votes (intersections in a given grid cell) a candidate line needs to have to make it into the output</li><li><code>np.array([])</code>: empty array as placeholder</li><li><code>min_line_len</code>: minimum length of a line in pixels</li><li><code>max_line_gap</code>: maximum distance in pixels between segments that is allowed to be connected into a single line</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib.image <span class="keyword">as</span> mpimg</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Read in and grayscale the image</span></div><div class="line">image = mpimg.imread(<span class="string">'exit-ramp.jpg'</span>)</div><div class="line">gray = cv2.cvtColor(image,cv2.COLOR_RGB2GRAY)</div><div class="line"></div><div class="line"><span class="comment"># Define a kernel size and apply Gaussian smoothing</span></div><div class="line">kernel_size = <span class="number">5</span></div><div class="line">blur_gray = cv2.GaussianBlur(gray,(kernel_size, kernel_size),<span class="number">0</span>)</div><div class="line"></div><div class="line"><span class="comment"># Define our parameters for Canny and apply</span></div><div class="line">low_threshold = <span class="number">50</span></div><div class="line">high_threshold = <span class="number">150</span></div><div class="line">edges = cv2.Canny(blur_gray, low_threshold, high_threshold)</div><div class="line"></div><div class="line"><span class="comment"># Next we'll create a masked edges image using cv2.fillPoly()</span></div><div class="line">mask = np.zeros_like(edges)   </div><div class="line">ignore_mask_color = <span class="number">255</span>   </div><div class="line"></div><div class="line"><span class="comment"># This time we are defining a four sided polygon to mask</span></div><div class="line">imshape = image.shape</div><div class="line">height = imshape[<span class="number">0</span>]</div><div class="line">width = imshape[<span class="number">1</span>]</div><div class="line">lower_left = (<span class="number">0</span>, height)</div><div class="line">upper_left = (width * <span class="number">0.49</span>, height * <span class="number">0.54</span>)</div><div class="line">upper_right = (width * <span class="number">0.51</span>, height * <span class="number">0.54</span>)</div><div class="line">lower_right = (width, height)</div><div class="line">vertices = np.array([[lower_left, upper_left, upper_right, lower_right]], dtype=np.int32)</div><div class="line">cv2.fillPoly(mask, vertices, ignore_mask_color)</div><div class="line">masked_edges = cv2.bitwise_and(edges, mask)</div><div class="line"></div><div class="line">print(<span class="string">"Image shape: &#123;&#125;"</span>.format(image.shape))</div><div class="line"></div><div class="line"><span class="comment"># Display masked region</span></div><div class="line">line_x = [lower_left[<span class="number">0</span>], upper_left[<span class="number">0</span>], upper_right[<span class="number">0</span>], lower_right[<span class="number">0</span>], lower_left[<span class="number">0</span>]]</div><div class="line">line_y = [lower_left[<span class="number">1</span>], upper_left[<span class="number">1</span>], upper_right[<span class="number">1</span>], lower_right[<span class="number">1</span>], lower_left[<span class="number">1</span>]]</div><div class="line">plt.plot(line_x, line_y, <span class="string">'b--'</span>, lw=<span class="number">4</span>)</div><div class="line">plt.imshow(image)</div><div class="line">plt.savefig(<span class="string">'hough-transform-masked-region.png'</span>)</div><div class="line">plt.show()</div><div class="line"></div><div class="line"><span class="comment"># Define the Hough transform parameters</span></div><div class="line"><span class="comment"># Make a blank the same size as our image to draw on</span></div><div class="line">rho = <span class="number">2</span>              <span class="comment"># distance resolution in pixels of the Hough grid</span></div><div class="line">theta = np.pi/<span class="number">180</span>    <span class="comment"># angular resolution in radians of the Hough grid</span></div><div class="line">threshold = <span class="number">15</span>       <span class="comment"># minimum number of votes (intersections in Hough grid cell)</span></div><div class="line">min_line_length = <span class="number">40</span> <span class="comment"># minimum number of pixels making up a line</span></div><div class="line">max_line_gap = <span class="number">20</span>    <span class="comment"># maximum gap in pixels between connectable line segments</span></div><div class="line">line_image = np.copy(image)*<span class="number">0</span> <span class="comment"># creating a blank to draw lines on</span></div><div class="line"></div><div class="line"><span class="comment"># Run Hough on edge detected image</span></div><div class="line"><span class="comment"># Output "lines" is an array containing endpoints of detected line segments</span></div><div class="line">lines = cv2.HoughLinesP(masked_edges, rho, theta, threshold, np.array([]),</div><div class="line">                            min_line_length, max_line_gap)</div><div class="line"></div><div class="line"><span class="comment"># Iterate over the output "lines" and draw lines on a blank image</span></div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</div><div class="line">    <span class="keyword">for</span> x1,y1,x2,y2 <span class="keyword">in</span> line:</div><div class="line">        cv2.line(line_image,(x1,y1),(x2,y2),(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="comment"># Create a "color" binary image to combine with line image</span></div><div class="line">color_edges = np.dstack((edges, edges, edges))</div><div class="line"></div><div class="line"><span class="comment"># Draw the lines on the edge image</span></div><div class="line">lines_edges = cv2.addWeighted(color_edges, <span class="number">0.8</span>, line_image, <span class="number">1</span>, <span class="number">0</span>) </div><div class="line">plt.imshow(lines_edges)</div><div class="line">plt.savefig(<span class="string">'hough-transform-edge-detection.png'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure><ul><li>Masked region<img src="/images/2017-10-08-sdr-project-finding-lane-lines/hough-transform-masked-region.png" width="492" height="276"></li><li>Edge detection<img src="/images/2017-10-08-sdr-project-finding-lane-lines/hough-transform-edge-detection.png" width="492" height="276"></li></ul><h1 id="Project-Intro"><a href="#Project-Intro" class="headerlink" title="Project Intro"></a>Project Intro</h1><p><a href="https://github.com/tuliren/CarND-LaneLines-P1" target="_blank" rel="external">https://github.com/tuliren/CarND-LaneLines-P1</a></p><h1 id="Starter-Kit-Installation"><a href="#Starter-Kit-Installation" class="headerlink" title="Starter Kit Installation"></a>Starter Kit Installation</h1><p><a href="https://github.com/tuliren/CarND-Term1-Starter-Kit" target="_blank" rel="external">https://github.com/tuliren/CarND-Term1-Starter-Kit</a><br><a href="https://github.com/tuliren/CarND-Term1-Starter-Kit-Test" target="_blank" rel="external">https://github.com/tuliren/CarND-Term1-Starter-Kit-Test</a></p>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/08/sdr-02-project-finding-lane-lines/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Self Driving Car - 01 Welcome</title>
      <link>http://tuliren.github.io/2017/10/08/sdr-01-welcome/</link>
      <guid>http://tuliren.github.io/2017/10/08/sdr-01-welcome/</guid>
      <pubDate>Sun, 08 Oct 2017 21:38:07 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;/2017/10/05/sdr-00-self-driving-car-syllabus&quot;&gt;Self Driving Car Syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Two-approaches&quot;&gt;&lt;a href=&quot;#Two-approaches
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="/2017/10/05/sdr-00-self-driving-car-syllabus">Self Driving Car Syllabus</a></p><h1 id="Two-approaches"><a href="#Two-approaches" class="headerlink" title="Two approaches"></a>Two approaches</h1><ul><li>Robotic<ul><li>Fuse output from sensors to measure vehicel surroundings and navigate accordingly</li></ul></li><li>Deep learning<ul><li>Learn how to drive by mimicking human driving behavior</li></ul></li><li>Both approaches will be taught in this program</li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/08/sdr-01-welcome/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React - Render UI with React</title>
      <link>http://tuliren.github.io/2017/10/08/react-render-ui-with-react/</link>
      <guid>http://tuliren.github.io/2017/10/08/react-render-ui-with-react/</guid>
      <pubDate>Sun, 08 Oct 2017 18:37:43 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;/2017/10/07/react-syllabus&quot;&gt;React Syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="/2017/10/07/react-syllabus">React Syllabus</a></p><h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><ul><li>React elements: JavaScript objects</li><li>React elements -&gt; DOM nodes</li><li>React components: custom elements</li></ul><hr><h1 id="Creating-Elements-and-JSX"><a href="#Creating-Elements-and-JSX" class="headerlink" title="Creating Elements and JSX"></a>Creating Elements and JSX</h1><h2 id="React-createElement"><a href="#React-createElement" class="headerlink" title="React.createElement"></a><code>React.createElement</code></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">React.createElement(type, props, content);</div></pre></td></tr></table></figure><ul><li>Creates a single React element of particular type.</li><li><code>type</code><ul><li>string (<code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>)</li><li>React component</li></ul></li><li><code>props</code><ul><li><code>null</code></li><li>An object of HTML attributes and custom data about the element</li></ul></li><li><code>content</code><ul><li><code>null</code></li><li>String</li><li>React element</li><li>React component</li></ul></li></ul><h3 id="Example-basic"><a href="#Example-basic" class="headerlink" title="Example - basic"></a>Example - basic</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> element = React.createElement(</div><div class="line">  <span class="string">'div'</span>,</div><div class="line">  &#123;<span class="attr">className</span>: <span class="string">'welcome-message'</span>&#125;,</div><div class="line">  React.createElement(<span class="string">'strong'</span>, <span class="literal">null</span>, <span class="string">'hello world'</span>)</div><div class="line">)</div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">  element,</div><div class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">)</div></pre></td></tr></table></figure><ul><li>Apps built with React have a single <code>root</code> DOM node.</li><li><code>element</code> is inserted into the <code>root</code> DOM node.</li></ul><h3 id="Example-dynamic-list"><a href="#Example-dynamic-list" class="headerlink" title="Example - dynamic list"></a>Example - dynamic list</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> people = [</div><div class="line">  &#123; <span class="attr">name</span>: <span class="string">'Michael'</span> &#125;,</div><div class="line">  &#123; <span class="attr">name</span>: <span class="string">'Ryan'</span> &#125;,</div><div class="line">  &#123; <span class="attr">name</span>: <span class="string">'Tyler'</span> &#125;</div><div class="line">]</div><div class="line"></div><div class="line"><span class="keyword">const</span> element = React.createElement(</div><div class="line">  <span class="string">'ol'</span>,</div><div class="line">  <span class="literal">null</span>,</div><div class="line">  people.map(<span class="function">(<span class="params">person, index</span>) =&gt;</span> (</div><div class="line">    React.createElement(<span class="string">'li'</span>, &#123;<span class="attr">key</span>: person.name, <span class="attr">id</span>: index&#125;, person.name)</div><div class="line">  ))</div><div class="line">)</div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">  element,</div><div class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">)</div></pre></td></tr></table></figure><ul><li>A unique <code>key</code> prop is needed when defining a list. <code>key</code> helps React track specific child elements as the state changes in the app.</li></ul><h2 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h2><ul><li>A syntax extention to <code>React.createElement</code>.</li><li>JSX is compiled to JavaScript.</li><li>JSX returns a single element as well.</li></ul><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> people = [</div><div class="line">  &#123; <span class="attr">name</span>: <span class="string">'Michael'</span> &#125;,</div><div class="line">  &#123; <span class="attr">name</span>: <span class="string">'Ryan'</span> &#125;,</div><div class="line">  &#123; <span class="attr">name</span>: <span class="string">'Tyler'</span> &#125;</div><div class="line">]</div><div class="line"></div><div class="line"><span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span></div><div class="line"><span class="xml">  &#123;people.map((person, index) =&gt; (</span></div><div class="line">    &lt;li id=&#123;index&#125; key=&#123;person.name&#125;&gt;</div><div class="line">      &#123;person.name&#125;</div><div class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml">  ))&#125;</span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span></div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">  element,</div><div class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">)</div></pre></td></tr></table></figure><h2 id="React-component"><a href="#React-component" class="headerlink" title="React component"></a>React component</h2><ul><li>Reusable pieces of code that groups React elements together.</li><li>Factory to create React elements.</li><li>Component should have<ul><li>Clear responsibilities.</li><li>Well-defined interfaces.</li></ul></li><li>Required method: <code>render</code>.</li></ul><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ContactList</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">const</span> people = [</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">'Michael'</span> &#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">'Ryan'</span> &#125;,</div><div class="line">      &#123; <span class="attr">name</span>: <span class="string">'Tyler'</span> &#125;</div><div class="line">    ]</div><div class="line"></div><div class="line">    <span class="keyword">const</span> element = <span class="xml"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span></div><div class="line"><span class="xml">      &#123;people.map((person, index) =&gt; (</span></div><div class="line">        &lt;li id=&#123;index&#125; key=&#123;person.name&#125;&gt;</div><div class="line">          &#123;person.name&#125;</div><div class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml">      ))&#125;</span></div><div class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ReactDOM.render(</div><div class="line">  &lt;ContactList/&gt;,</div><div class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">// Use the following import statement to simplify component declaration:</span></div><div class="line"><span class="comment">//   import React, &#123; Component &#125; from 'react'</span></div><div class="line"><span class="comment">//   class ContactList extends Component</span></div></pre></td></tr></table></figure><hr><h1 id="Create-React-App"><a href="#Create-React-App" class="headerlink" title="Create React App"></a>Create React App</h1><ul><li><code>Webpack</code> bundles all assets (JavaScript files, CSS, images, etc).</li><li><code>Babel</code> transpiles JSX to JavaScript.</li><li><code>create-react-app</code> manages all the above setup.</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">npm install -g create-react-app</div><div class="line"><span class="comment"># -g: install globally</span></div><div class="line"></div><div class="line">create-react-app &lt;app&gt;</div><div class="line"><span class="comment"># installs react, react-dom and react-scripts</span></div><div class="line"><span class="comment"># creates the app</span></div><div class="line"></div><div class="line"><span class="built_in">cd</span> &lt;app&gt;/</div><div class="line">yarn start</div><div class="line"><span class="comment"># package manager by facebook</span></div></pre></td></tr></table></figure><ul><li>Edit <code>App.js</code> file.</li><li><code>index.js</code> reads in <code>App.js</code> and renders it.</li></ul><hr><h1 id="Composing-with-Components"><a href="#Composing-with-Components" class="headerlink" title="Composing with Components"></a>Composing with Components</h1><ul><li>Component composition<ul><li>Reuse components</li><li>Allow different configuration of components</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ContactList</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">const</span> people = <span class="keyword">this</span>.props.contacts</div><div class="line"></div><div class="line">    ...</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;div className=<span class="string">'App'</span>&gt;</div><div class="line">        &lt;ContactList contacts=&#123;[</div><div class="line">          &#123; <span class="attr">name</span>: <span class="string">'Michael'</span> &#125;</div><div class="line">          &#123; <span class="attr">name</span>: <span class="string">'Ryan'</span> &#125;</div><div class="line">          &#123; <span class="attr">name</span>: <span class="string">'Tyler'</span> &#125;</div><div class="line">        ]&#125;/&gt;</div><div class="line"></div><div class="line">        &lt;ContactList contacts=&#123;[</div><div class="line">          &#123; <span class="attr">name</span>: <span class="string">'Amanda'</span> &#125;</div><div class="line">          &#123; <span class="attr">name</span>: <span class="string">'Richard'</span> &#125;</div><div class="line">          &#123; <span class="attr">name</span>: <span class="string">'Geoff'</span> &#125;</div><div class="line">        ]&#125;/&gt;</div><div class="line">      &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    )</span></div><div class="line"><span class="regexp">  &#125;</span></div><div class="line"><span class="regexp">&#125;</span></div></pre></td></tr></table></figure><hr><h1 id="Outro"><a href="#Outro" class="headerlink" title="Outro"></a>Outro</h1><ul><li>JSX uses JavaScript to describe UI elements.</li><li>React components group UI elements, and can be composed together.</li><li><code>create-react-app</code></li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/08/react-render-ui-with-react/#disqus_thread</comments>
    </item>
    
    <item>
      <title>React - Why React?</title>
      <link>http://tuliren.github.io/2017/10/07/react-why-react/</link>
      <guid>http://tuliren.github.io/2017/10/07/react-why-react/</guid>
      <pubDate>Sat, 07 Oct 2017 17:09:25 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;/2017/10/07/react-syllabus&quot;&gt;React Syllabus&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h
        
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="/2017/10/07/react-syllabus">React Syllabus</a></p><h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><ul><li>What makes React special?<ul><li>Compositional model</li><li>Declarative nature</li><li>The way data flows from parent to child</li><li>React is just JavaScript</li></ul></li></ul><hr><h1 id="Composition"><a href="#Composition" class="headerlink" title="Composition"></a>Composition</h1><ul><li><p>React code composes functions to get UI.</p></li><li><p>Composition</p><ul><li>Combine simple functions to build complicated ones.</li><li>Good function follows DOT rule (Do One Thing).</li></ul></li><li><p>React component</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// simple components</div><div class="line"><span class="tag">&lt;<span class="name">Page</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">Article</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">Sidebar</span> /&gt;</span></div><div class="line"></div><div class="line">// component composition</div><div class="line"><span class="tag">&lt;<span class="name">Page</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">Article</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">Sidebar</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></div></pre></td></tr></table></figure></li></ul><hr><h1 id="Declarative-Code"><a href="#Declarative-Code" class="headerlink" title="Declarative Code"></a>Declarative Code</h1><ul><li><p>Imperative code</p><ul><li>Imperative: expressing a command; commanding.</li><li><p>Exactly <strong><em>what to do</em></strong> and <strong><em>how to do</em></strong> it.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> people = [<span class="string">'Amanda'</span>, <span class="string">'Geoff'</span>, <span class="string">'Michael'</span>, <span class="string">'Richard'</span>, <span class="string">'Ryan'</span>, <span class="string">'Tyler'</span>]</div><div class="line"><span class="keyword">const</span> excitedPeople = []</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; people.length; i++) &#123;</div><div class="line">  excitedPeople[i] = people[i] + <span class="string">'!'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul></li><li><p>Declarative code</p><ul><li>Declare <strong><em>what to be done</em></strong>.<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> excitedPeople = people.map(<span class="function"><span class="params">name</span> =&gt;</span> name + <span class="string">'!'</span>)</div></pre></td></tr></table></figure></li></ul></li></ul><hr><h1 id="Unidirectional-Data-Flow"><a href="#Unidirectional-Data-Flow" class="headerlink" title="Unidirectional Data Flow"></a>Unidirectional Data Flow</h1><ul><li>Data-binding in other frameworks<ul><li><a href="https://angular.io/guide/template-syntax#binding-syntax-an-overview" target="_blank" rel="external">Angular</a><ul><li>From source to view</li><li>From view to source</li><li>Two-way</li></ul></li><li><a href="https://guides.emberjs.com/v2.13.0/object-model/bindings/" target="_blank" rel="external">Ember</a><ul><li>Two-way: <code>Ember.computed.alias()</code></li><li>One-way: <code>Ember.computed.oneWay()</code></li></ul></li></ul></li></ul><ul><li><p>React’s data-flow</p><ul><li>Data lives in the parent component.</li><li>Data is accessible by both the parent and child components.</li><li>Only the parent component can change the data.</li><li>If child component needs to make a change to the data, it would send the updated data to the parent component where the change will actually be made.</li></ul><img src="/images/2017-10-07-react-why-react/data-flow.png" width="400" height="225"></li></ul><hr><h1 id="Just-JavaScript"><a href="#Just-JavaScript" class="headerlink" title="Just JavaScript"></a>Just JavaScript</h1><ul><li>JS functional programming<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" target="_blank" rel="external"><code>Array.map()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" target="_blank" rel="external"><code>Array.filter()</code></a></li></ul></li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/07/react-why-react/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Udacity React Nanodegree Curriculum</title>
      <link>http://tuliren.github.io/2017/10/07/react-syllabus/</link>
      <guid>http://tuliren.github.io/2017/10/07/react-syllabus/</guid>
      <pubDate>Sat, 07 Oct 2017 17:01:05 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;React-Fundamentals&quot;&gt;&lt;a href=&quot;#React-Fundamentals&quot; class=&quot;headerlink&quot; title=&quot;React Fundamentals&quot;&gt;&lt;/a&gt;React Fundamentals&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="React-Fundamentals"><a href="#React-Fundamentals" class="headerlink" title="React Fundamentals"></a>React Fundamentals</h1><ul><li><a href="/2017/10/07/react-why-react">Why React?</a></li><li><a href="/2017/10/08/react-render-ui-with-react">Render UI with React</a></li><li>State Management</li><li>Render UI with External Data</li><li>React Router</li><li>Project: MyReads</li></ul><hr><h1 id="React-amp-Redux"><a href="#React-amp-Redux" class="headerlink" title="React &amp; Redux"></a>React &amp; Redux</h1><ul><li>Why Redux?</li><li>Redux Core</li><li>React &amp; Redux</li><li>Redux Store</li><li>Redux Middleware</li><li>Project: Readable</li></ul><hr><h1 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h1><ul><li>Up and Running with React Native</li><li>React vs React Native</li><li>Styling &amp; Layout</li><li>Navigation</li><li>Native Features</li><li>Project: Mobile Flashcards</li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/07/react-syllabus/#disqus_thread</comments>
    </item>
    
    <item>
      <title>读书笔记：如何阅读一本书</title>
      <link>http://tuliren.github.io/2017/10/07/reading-how-to-read-a-book/</link>
      <guid>http://tuliren.github.io/2017/10/07/reading-how-to-read-a-book/</guid>
      <pubDate>Sat, 07 Oct 2017 16:37:36 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;链接：&lt;a href=&quot;https://book.douban.com/subject/1013208/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何阅读一本书&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一篇-阅读的层次&quot;&gt;&lt;a href=&quot;#第一篇-阅读的
        
      
      </description>
      
      <content:encoded><![CDATA[<p>链接：<a href="https://book.douban.com/subject/1013208/" target="_blank" rel="external">如何阅读一本书</a></p><h1 id="第一篇-阅读的层次"><a href="#第一篇-阅读的层次" class="headerlink" title="第一篇 阅读的层次"></a>第一篇 阅读的层次</h1><h2 id="第一章-阅读的活力与艺术"><a href="#第一章-阅读的活力与艺术" class="headerlink" title="第一章 阅读的活力与艺术"></a>第一章 阅读的活力与艺术</h2><ul><li>主动阅读：积极接受作者要传达的意念。</li><li>阅读技巧</li></ul><h2 id="第二章-阅读的层次"><a href="#第二章-阅读的层次" class="headerlink" title="第二章 阅读的层次"></a>第二章 阅读的层次</h2><ul><li>第一层次：基础阅读（elementary）<ul><li>字、句子的含义。</li><li>这个句子在说什么？</li></ul></li><li>第二层次：检视阅读（inspectional）<ul><li>在一定时间内，抓出一本书的重点，系统化略读（skimming systematically），学习书的表象。</li><li>这本书在谈什么？构架如何？包含哪些部分？</li></ul></li><li>第三层次：分析阅读（analytical）<ul><li>全盘、完整的阅读。本书的重点。</li><li>高中应该达到的水平。</li></ul></li><li>第四层次：比较阅读（comparative）<ul><li>阅读多本书，列举这些书之间的相关之处，提出一个共同的主题。</li><li>大学应该达到的水平。</li></ul></li></ul><h2 id="第三章-第一个层次：基础阅读"><a href="#第三章-第一个层次：基础阅读" class="headerlink" title="第三章 第一个层次：基础阅读"></a>第三章 第一个层次：基础阅读</h2><h2 id="第四章-第二个层次：检视阅读"><a href="#第四章-第二个层次：检视阅读" class="headerlink" title="第四章 第二个层次：检视阅读"></a>第四章 第二个层次：检视阅读</h2><ul><li>子层次一：略读。了解书的主旨，值不值得阅读。</li><li>子层次二：粗浅阅读。从头到尾读一遍，不要停下来查询或思索。</li><li>阅读的速度要求：不仅读得快，还要知道在不同的部分用不同的方法和速度来读。</li><li>逗留（fix-ate）和倒退<ul><li>眼睛跟着手指移动阅读。</li></ul></li></ul><h2 id="第五章-如何做一个自我要求的读者"><a href="#第五章-如何做一个自我要求的读者" class="headerlink" title="第五章 如何做一个自我要求的读者"></a>第五章 如何做一个自我要求的读者</h2><ul><li>读书时的四个主要问题<ol><li>这本书在谈什么？主题是如何发展的？从属的关键议题是什么？</li><li>主要的想法、声明和论点。</li><li>说得有没有道理？</li><li>书和读者有什么关系？书中的资讯有何意义？有何启发？</li></ol></li><li>阅读核心<ul><li>基础阅读以上层次的核心是：提出问题并找出答案。</li></ul></li><li>笔记<ul><li>检视阅读：结构笔记（structual）</li><li>分析阅读：概念笔记（conceptual）</li><li>主题阅读：辩证笔记（dialectical）</li></ul></li></ul><hr><h1 id="第二篇-阅读的第三个层次"><a href="#第二篇-阅读的第三个层次" class="headerlink" title="第二篇 阅读的第三个层次"></a>第二篇 阅读的第三个层次</h1><h2 id="第六章-一本书的分类"><a href="#第六章-一本书的分类" class="headerlink" title="第六章 一本书的分类"></a>第六章 一本书的分类</h2><ul><li>分析阅读的第一阶段（构架）<ul><li>规则一：知道书的分类<ul><li>不同类型的书提供知识和启发的方式不一样。</li></ul></li></ul></li></ul><h2 id="第七章-透视一本书"><a href="#第七章-透视一本书" class="headerlink" title="第七章 透视一本书"></a>第七章 透视一本书</h2><ul><li>分析阅读的第一阶段（构架）<ul><li>规则二：使用一句话或最多一小段文字，概述全书内容。</li><li>规则三：将书中重要篇章列举出来，说明它们如何按照顺序组成整体架构。<ul><li>规则三的构架印证规则二的概述。</li></ul></li><li>规则四：找出作者要问的问题，或者要解决的问题。</li></ul></li><li>建筑和动线（traffic pattern）比喻</li><li>提纲不能替代书，是因为书需要必要的空间和深度，也就是对提纲的解读（read out），有整体感。</li></ul><h2 id="第八章-与作者找出共通的词义"><a href="#第八章-与作者找出共通的词义" class="headerlink" title="第八章 与作者找出共通的词义"></a>第八章 与作者找出共通的词义</h2><ul><li>分析阅读的第二阶段（诠释）<ul><li>规则五：找出关键字，确认这些字词精确的意义，与作者达成共识。</li></ul></li></ul><h2 id="第九章-判断作者的主旨"><a href="#第九章-判断作者的主旨" class="headerlink" title="第九章 判断作者的主旨"></a>第九章 判断作者的主旨</h2><ul><li>分析阅读的第二阶段（诠释）<ul><li>规则六：将一本书最重要的句子圈出来，找出其中的主旨。</li><li>规则七：找出作者的论述，重新构架这些论述的前因后果，以明白作者的主张。</li><li>规则八：找出作者的解答，和未解决的问题。</li></ul></li></ul><h2 id="第十章-公正地判断一本书"><a href="#第十章-公正地判断一本书" class="headerlink" title="第十章 公正地判断一本书"></a>第十章 公正地判断一本书</h2><ul><li>分析阅读的第三阶段（评论）<ul><li>规则九：在评论前，确定自己了解书的内容。</li><li>规则十：不同意作者观点时，要理性地表达自己的意见。</li><li>规则十一：明白知识与个人观点的不同，作出评断之前，找出理论基础。把知识上的不同意见看作可以解决的问题。</li></ul></li></ul><h2 id="第十一章-赞同或反对作者"><a href="#第十一章-赞同或反对作者" class="headerlink" title="第十一章 赞同或反对作者"></a>第十一章 赞同或反对作者</h2><ul><li>理想化辩论<ol><li>争辩时避免情绪。</li><li>说明自己的假设，接受对手有不同假设的权利。</li><li>尽量不偏不倚，避免盲点。</li></ol></li><li>分析阅读的第三阶段（评论）<ul><li>表示不同意见<ul><li>规则十二：指出作者知识不足（uninformed）：缺乏相关知识</li><li>规则十三：指出作者知识错误（misinformed）：论点不符合事实</li><li>规则十四：指出作者叙述不合逻辑</li></ul></li><li>对书暂缓评论<ul><li>规则十五：指出作者分析不完整<ul><li>作者成就有限，但不能作为不同意作者的根据</li></ul></li></ul></li></ul></li></ul><h2 id="第十二章-辅助阅读"><a href="#第十二章-辅助阅读" class="headerlink" title="第十二章 辅助阅读"></a>第十二章 辅助阅读</h2><ul><li>内在阅读（intrinsic reading）<ul><li>阅读书籍本身</li></ul></li><li>外在阅读（extrinsic reading）<ul><li>借助其他书来阅读一本书</li><li>寻找外力帮助之前，最好先做内在阅读</li></ul></li><li>外在辅助<ul><li>相关经验<ul><li>一般经验<ul><li>适用于任何人</li><li>小说、哲学</li></ul></li><li>特殊经验<ul><li>需要主动寻找（比如实验）</li><li>科学作品</li></ul></li><li>检测自己能否适当地运用经验<ul><li>在自己觉得了解了的某一点上，能不能举出一个实例？</li></ul></li></ul></li><li>其他书</li><li>导论（commentary）与摘要（abstract）<ul><li>先读作者的前沿，再读正文（分析阅读的第一阶段）</li><li>先读书，再读别人的导论，避免对书产生曲解</li></ul></li><li>工具书</li></ul></li></ul><hr><h1 id="第三篇-辅助阅读"><a href="#第三篇-辅助阅读" class="headerlink" title="第三篇 辅助阅读"></a>第三篇 辅助阅读</h1><h2 id="第十三章-如何阅读实用型的书"><a href="#第十三章-如何阅读实用型的书" class="headerlink" title="第十三章 如何阅读实用型的书"></a>第十三章 如何阅读实用型的书</h2><ul><li>实用型的书不能解决该书所关心的实际问题</li><li>实际问题只能靠行动来解决</li><li>读实用型书时的四个主要问题<ol><li>（不变）这本书在谈什么？主题是如何发展的？从属的关键议题是什么？</li><li>（不变）主要的想法、声明和论点。<ul><li>规则四：作者想要读者做什么？</li><li>规则八：作者要读者这样做的目的。</li></ul></li><li>（变）内容真实吗？</li><li>（变）如果同意作者，有没有采取行动？为什么没有采取行动？</li></ol></li></ul><h2 id="第十四章-如何阅读想象文学"><a href="#第十四章-如何阅读想象文学" class="headerlink" title="第十四章 如何阅读想象文学"></a>第十四章 如何阅读想象文学</h2><ul><li>要避免的规则<ul><li>不要抗拒想象文学带来的影响力。<ul><li>阅读文学作品，以达成深沉经验为目标。</li></ul></li><li>不要仅从字面理解作品<ul><li>隐喻传达的信息，有时比文字本身丰富。</li></ul></li><li>不要寻找共识、主旨或论述</li><li>不要用论说型作品的标准来批评小说</li></ul></li><li>方法<ul><li>第一阶段（构架）<ol><li>将作品分类<ul><li>抒情诗：以表达个人情绪的经验，来叙述故事</li><li>戏剧：以行动和对话来叙述剧情</li></ul></li><li>抓住全书大意<ul><li>作者的问题是要传达一个具体的经验</li><li>小说的大意在情节之中</li></ul></li><li>发现全书个部分的构架<ul><li>故事的不同阶段</li></ul></li></ol></li><li>第二阶段（诠释）<ol><li>识别小说中的要素<ul><li>插曲、时间、角色</li><li>角色的思想、言语、感觉及行动</li></ul></li><li>识别场景或背景背景有关<ul><li>场景或背景，是小说要素间的静态联系</li></ul></li><li>识别情节<ul><li>小说要素间的动态联系</li></ul></li></ol></li><li>第三阶段（评论）<ul><li>在衷心感激作者为读者创造的经验之前，不要批评一本想象的作品<ul><li>批评的不是作者创造的世界，而是创造之后的结果</li></ul></li></ul></li></ul></li></ul><h2 id="第十五章-阅读故事、戏剧与诗"><a href="#第十五章-阅读故事、戏剧与诗" class="headerlink" title="第十五章 阅读故事、戏剧与诗"></a>第十五章 阅读故事、戏剧与诗</h2><h2 id="第十六章-如何阅读历史书"><a href="#第十六章-如何阅读历史书" class="headerlink" title="第十六章 如何阅读历史书"></a>第十六章 如何阅读历史书</h2><h2 id="第十七章-如何阅读科学与数学"><a href="#第十七章-如何阅读科学与数学" class="headerlink" title="第十七章 如何阅读科学与数学"></a>第十七章 如何阅读科学与数学</h2><h2 id="第十八章-如何阅读哲学书"><a href="#第十八章-如何阅读哲学书" class="headerlink" title="第十八章 如何阅读哲学书"></a>第十八章 如何阅读哲学书</h2><h2 id="第十九章-如何阅读社会科学"><a href="#第十九章-如何阅读社会科学" class="headerlink" title="第十九章 如何阅读社会科学"></a>第十九章 如何阅读社会科学</h2><hr><h1 id="第四篇-阅读的终极目标"><a href="#第四篇-阅读的终极目标" class="headerlink" title="第四篇 阅读的终极目标"></a>第四篇 阅读的终极目标</h1><h2 id="第二十章-第四个层次：主题阅读"><a href="#第二十章-第四个层次：主题阅读" class="headerlink" title="第二十章 第四个层次：主题阅读"></a>第二十章 第四个层次：主题阅读</h2><ul><li>为了主题而阅读，不是为了书本身阅读。</li><li>准备阶段<ol><li>设计试验性数目。</li><li>浏览书目上的书，确定哪些与主题相关。</li></ol></li><li>五个步骤<ol><li>检视阅读书目，找出与主题相关的章节。</li><li>根据主题创造一套中立的词汇，在各作者间建立共识，将不同作者的语言转换为共通的词汇。</li><li>厘清问题。建立主旨。先列出一些可以把问题说明白的问题，让作者来回答这些问题。</li><li>界定议题。将作者针对各个问题的不同意见整理在各个议题旁边。找出不同意见间的关系，根据作者的观点来分类。</li><li>分析讨论。例如顺序清晰的讨论。依照特定的顺序提问，辨识这个顺序的合理性。说明这些问题的不同答案及原因。从书中找出支持答案分类的根据。把问题的各个层面显现出来。</li></ol></li><li>保持客观<ul><li>面面俱到，不预设立场。</li><li>通过对相关章节的再阅读，避免偏见。</li></ul></li></ul><h2 id="第二十一章-阅读与心智的成长"><a href="#第二十一章-阅读与心智的成长" class="headerlink" title="第二十一章 阅读与心智的成长"></a>第二十一章 阅读与心智的成长</h2>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/07/reading-how-to-read-a-book/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Udacity Self Driving Car Term 1 Curriculum</title>
      <link>http://tuliren.github.io/2017/10/05/sdr-00-self-driving-car-syllabus/</link>
      <guid>http://tuliren.github.io/2017/10/05/sdr-00-self-driving-car-syllabus/</guid>
      <pubDate>Thu, 05 Oct 2017 15:19:32 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Reference: &lt;a href=&quot;https://medium.com/self-driving-cars/term-1-in-depth-on-udacitys-self-driving-car-curriculum-ffcf46af0c08&quot; target=&quot;_b
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Reference: <a href="https://medium.com/self-driving-cars/term-1-in-depth-on-udacitys-self-driving-car-curriculum-ffcf46af0c08" target="_blank" rel="external">Term 1 Curriculum</a></p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a><a href="/2017/10/08/sdr-01-welcome">Welcome</a></h2><p>  Learn about the systems that comprise a self-driving car, and the structure of the program.</p><h2 id="Project-Detect-Lane-Lines"><a href="#Project-Detect-Lane-Lines" class="headerlink" title="Project Detect Lane Lines"></a>Project Detect Lane Lines</h2><p>  Detect highway lane lines from a video stream. Use OpenCV image analysis techniques to identify lines, including Hough transforms and Canny edge detection.</p><ul><li>Deadline 2017-10-12</li><li><a href="/2017/10/08/sdr-02-project-finding-lane-lines">Project notes</a></li><li><a href="/2017/10/27/sdr-02-project-report">Project report</a></li></ul><hr><h1 id="Deep-Learning"><a href="#Deep-Learning" class="headerlink" title="Deep Learning"></a>Deep Learning</h1><h2 id="Introduction-to-Neural-Networks"><a href="#Introduction-to-Neural-Networks" class="headerlink" title="Introduction to Neural Networks"></a><a href="/2017/10/27/sdr-04-introduction-to-neural-networks">Introduction to Neural Networks</a></h2><p>  Learn to build and train neural networks, starting with the foundations in linear and logistic regression, and culminating in backpropagation and multiplayer perceptron networks.</p><h2 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h2><p>  Review fundamentals of machine learning, including regression and classification.</p><h2 id="Neural-Networks"><a href="#Neural-Networks" class="headerlink" title="Neural Networks"></a>Neural Networks</h2><p>  Learn about perceptrons, activation functions, and basic neural networks. Implement your own neural network in Python.</p><h2 id="Logistic-Classifier"><a href="#Logistic-Classifier" class="headerlink" title="Logistic Classifier"></a>Logistic Classifier</h2><p>  Study how to train a logistic classifier, using machine learning. Implement a logistic classifier in TensorFlow.</p><h2 id="Optimization"><a href="#Optimization" class="headerlink" title="Optimization"></a>Optimization</h2><p>  Investigate techniques for optimizing classifier performance, including validation and test sets, gradient descent, momentum, and learning rates.</p><h2 id="Rectified-Linear-Units"><a href="#Rectified-Linear-Units" class="headerlink" title="Rectified Linear Units"></a>Rectified Linear Units</h2><p>  Evaluate activation functions and how they affect performance.</p><h2 id="Regularization"><a href="#Regularization" class="headerlink" title="Regularization"></a>Regularization</h2><p>  Learn techniques, including dropout, to avoid overfitting a network to the training data.</p><h2 id="Convolutional-Neural-Networks"><a href="#Convolutional-Neural-Networks" class="headerlink" title="Convolutional Neural Networks"></a>Convolutional Neural Networks</h2><p>  Study the building blocks of convolutional neural networks, including filters, stride, and pooling.</p><h2 id="Project-Traffic-Sign-Classification"><a href="#Project-Traffic-Sign-Classification" class="headerlink" title="Project Traffic Sign Classification"></a>Project Traffic Sign Classification</h2><p>  Implement and train a convolutional neural network to classify traffic signs. Use validation sets, pooling, and dropout to choose a network architecture and improve performance.</p><ul><li>2017-11-13</li></ul><h2 id="Keras"><a href="#Keras" class="headerlink" title="Keras"></a>Keras</h2><p>  Build a multi-layer convolutional network in Keras. Compare the simplicity of Keras to the flexibility of TensorFlow.</p><h2 id="Transfer-Learning"><a href="#Transfer-Learning" class="headerlink" title="Transfer Learning"></a>Transfer Learning</h2><p>  Finetune pre-trained networks to solve your own problems. Study cannonical networks such as AlexNet, VGG, GoogLeNet, and ResNet.</p><h2 id="Project-Behavioral-Cloning"><a href="#Project-Behavioral-Cloning" class="headerlink" title="Project Behavioral Cloning"></a>Project Behavioral Cloning</h2><p>  Architect and train a deep neural network to drive a car in a simulator. Collect your own training data and use it to clone your own driving behavior on a test track.</p><ul><li>2017-12-04</li></ul><hr><h1 id="Computer-Vision"><a href="#Computer-Vision" class="headerlink" title="Computer Vision"></a>Computer Vision</h1><h2 id="Cameras"><a href="#Cameras" class="headerlink" title="Cameras"></a>Cameras</h2><p>  Learn the physics of cameras, and how to calibrate, undistort, and transform image perspectives.</p><h2 id="Lane-Finding"><a href="#Lane-Finding" class="headerlink" title="Lane Finding"></a>Lane Finding</h2><p>  Study advanced techniques for lane detection with curved roads, adverse weather, and varied lighting.</p><h2 id="Project-Advanced-Lane-Detection"><a href="#Project-Advanced-Lane-Detection" class="headerlink" title="Project Advanced Lane Detection"></a>Project Advanced Lane Detection</h2><p>  Detect lane lines in a variety of conditions, including changing road surfaces, curved roads, and variable lighting. Use OpenCV to implement camera calibration and transforms, as well as filters, polynomial fits, and splines.</p><ul><li>2017-12-18</li></ul><h2 id="Support-Vector-Machines"><a href="#Support-Vector-Machines" class="headerlink" title="Support Vector Machines"></a>Support Vector Machines</h2><p>  Implement support vector machines and apply them to image classification.</p><h2 id="Decision-Trees"><a href="#Decision-Trees" class="headerlink" title="Decision Trees"></a>Decision Trees</h2><p>  Implement decision trees and apply them to image classification.</p><h2 id="Histogram-of-Oriented-Gradients"><a href="#Histogram-of-Oriented-Gradients" class="headerlink" title="Histogram of Oriented Gradients"></a>Histogram of Oriented Gradients</h2><p>  Implement histogram of oriented gradients and apply it to image classification.</p><h2 id="Deep-Neural-Networks"><a href="#Deep-Neural-Networks" class="headerlink" title="Deep Neural Networks"></a>Deep Neural Networks</h2><p>  Compare the classification performance of support vector machines, decision trees, histogram of oriented gradients, and deep neural networks.</p><h2 id="Vehicle-Tracking"><a href="#Vehicle-Tracking" class="headerlink" title="Vehicle Tracking"></a>Vehicle Tracking</h2><p>  Review how to apply image classification techniques to vehicle tracking, along with basic filters to integrate vehicle position over time.</p><h2 id="Project-Vehicle-Tracking"><a href="#Project-Vehicle-Tracking" class="headerlink" title="Project Vehicle Tracking"></a>Project Vehicle Tracking</h2><p>  Track vehicles in camera images using image classifiers such as SVMs, decision trees, HOG, and DNNs. Apply filters to fuse position data.</p><ul><li>2017-01-01</li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/10/05/sdr-00-self-driving-car-syllabus/#disqus_thread</comments>
    </item>
    
    <item>
      <title>读书笔记：象与骑象人</title>
      <link>http://tuliren.github.io/2017/09/21/reading-the-happiness-hypothesis/</link>
      <guid>http://tuliren.github.io/2017/09/21/reading-the-happiness-hypothesis/</guid>
      <pubDate>Thu, 21 Sep 2017 00:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;链接：&lt;a href=&quot;https://book.douban.com/subject/20260640/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;象与骑象人：幸福的假设&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一部分-人的心理是如何运作的：人象对峙&quot;&gt;&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>链接：<a href="https://book.douban.com/subject/20260640/" target="_blank" rel="external">象与骑象人：幸福的假设</a></p><h1 id="第一部分-人的心理是如何运作的：人象对峙"><a href="#第一部分-人的心理是如何运作的：人象对峙" class="headerlink" title="第一部分 人的心理是如何运作的：人象对峙"></a>第一部分 人的心理是如何运作的：人象对峙</h1><h2 id="第一章-分裂的自我产生心理冲突"><a href="#第一章-分裂的自我产生心理冲突" class="headerlink" title="第一章 分裂的自我产生心理冲突"></a>第一章 分裂的自我产生心理冲突</h2><h3 id="有关心理的比喻"><a href="#有关心理的比喻" class="headerlink" title="有关心理的比喻"></a>有关心理的比喻</h3><ul><li>弗洛伊德<ul><li>自我（ego）有意识和理性</li><li>朝我（superego）有道德良心，有时会过于拘泥于社会规范</li><li>本我（id）享乐的欲望，总想及时行乐</li><li>马车夫（自我）为了驾驭贪婪的马（本我）总得经过一场激烈奋战。同时，马车夫那坐在后座的父亲（朝我）还一路对他说教。</li><li>弗洛伊德认为，精神分析的目的，就是通过强化自我，让自我更好地控制本我，并摆脱朝我的束缚。</li></ul></li><li>作者的联想<ul><li>自我是骑在大象背上的人。手里的缰绳可以控制大象。</li><li>不过，只有在大象没有它自己的欲望时，才指挥得了大象。</li><li>一旦大象真的想做什么，我根本斗不过它。</li></ul></li></ul><h3 id="现代的理性选择理论和信息加工论不足以解释人类已知的软弱。"><a href="#现代的理性选择理论和信息加工论不足以解释人类已知的软弱。" class="headerlink" title="现代的理性选择理论和信息加工论不足以解释人类已知的软弱。"></a>现代的理性选择理论和信息加工论不足以解释人类已知的软弱。</h3><ul><li>经济学家：理性选择模式，解释人行为的原因。</li><li>社会心理学家：信息加工论，用来解释各种人类生活形态。</li></ul><h3 id="心理的四种划分"><a href="#心理的四种划分" class="headerlink" title="心理的四种划分"></a>心理的四种划分</h3><ul><li>心灵和身体</li><li>左脑和右脑<ul><li>左脑语言处理</li><li>右脑图形处理</li></ul></li><li>理性和感性<ul><li>脊椎动物的大脑，有新的区域叠加在老区域形成<ul><li>早期三大神经团：后脑、中脑、前脑</li><li>早期哺乳动物，前脑发展出新外壳：边缘系统（limbic system）<ul><li>下丘脑（hypothalamus）司协调基本冲动和动机。</li><li>海马（hippocampus）司记忆。</li><li>杏仁核（amygdala）司情绪学习和反应。</li></ul></li><li>高级哺乳动物，新的神经组织绕着边缘系统延展，新皮层前半部分似无特定任务，用来思考、计划和决策。</li><li>额叶皮质（frontal cortex）是压抑或抑制冲动反应的关键，是理性可能的所在。</li><li>额叶皮质也让人类情感与情绪发展更丰富。眼窝前额皮质（orbitofrontal cortex）司情绪反应，受损伤时，人无法感觉到情绪，虽然分析推理和逻辑思考能力未受影响，但无法做出简单决定，情绪大脑无法自动评估种种可能性。</li></ul></li></ul></li><li>控制化和自动化<ul><li>大部分心理历程自动发生。可多线并行。</li><li>控制化处理需要语言，随语言的出现而诞生。</li></ul></li></ul><h3 id="幸福的三个障碍"><a href="#幸福的三个障碍" class="headerlink" title="幸福的三个障碍"></a>幸福的三个障碍</h3><ul><li>骑象人是有意识的、控制后的思考。</li><li>象是内行感觉、本能反应、情绪和直觉。</li></ul><ol><li>无能的意志力<ul><li>Walter Mischel 棉花糖实验<ul><li>摆脱诱惑的控制，在不和大象的意志起冲突的情况下，分散大象注意力。</li></ul></li></ul></li><li>心理干扰<ul><li>Daniel Wegner 实验，不要想白熊，但被试一旦停止压抑这个念头，这个会更猛烈地涌入脑中，更难摆脱。</li><li>控制化处理企图影响大脑，一个明确目标被设立。追求目标时，心理会自动监控进度。所以自动化处理会一直自检：“我没有想白熊吧？”因此要大力气转移注意力，而和控制化处理发生对抗。因为控制化过程很快疲累下来，所以精力无穷的自动化处理过程会顺畅运行。</li></ul></li><li>冠冕堂皇的理由<ul><li>阐释模块（骑象人）很会编理由。</li><li>内心感觉、直觉和当下的判断会自动自发地即时发生，但只有阐释模块才能拼凑出语句。</li><li>大象决定对错美丑，大象控制缰绳，引导骑象人。</li></ul></li></ol><h2 id="第二章-是什么令你幸福"><a href="#第二章-是什么令你幸福" class="headerlink" title="第二章 是什么令你幸福"></a>第二章 是什么令你幸福</h2><h3 id="通俗心理学"><a href="#通俗心理学" class="headerlink" title="通俗心理学"></a>通俗心理学</h3><ul><li>事情只有通过我们的诠释才能影响到我们，所以控制对事情的诠释，可以控制自己的世界。<ul><li>与《专念》中的论述完全一致。</li></ul></li></ul><h3 id="令人感到不幸福的三个原因"><a href="#令人感到不幸福的三个原因" class="headerlink" title="令人感到不幸福的三个原因"></a>令人感到不幸福的三个原因</h3><ol><li>情感启动效应（affective priming effect）<ul><li>脑中有一个一直在运转的“喜欢计量表”，对经历的一切事情，都会产生“喜欢不喜欢”的反应。这种反应不会动用分析推理系统。<ul><li>Brett Pham 的研究：看到或听到和自己名字很像的词，会产生愉悦感。<ul><li>人名和职业有联系。Dennis 更可能成为 dentist。Lawrence 更可能成为 lawyer。</li><li>人偏好和自己名字听起来相像的人结婚。</li></ul></li></ul></li></ul></li><li>负面偏好（negative bias）<ul><li>物种设计原理之一，对坏事的反应要强于对好事的反应，表现在反应更快、更强烈、更难以克制。<ul><li>Marcel Losada 洛萨达比例：职场中积极与消极的比例大于 3:1 是公司能蓬勃发展。婚姻关系中，积极和消极的比例要达到 5:1。</li></ul></li><li>物种设计原理之二，相反的系统会相互对抗，以达到平衡，平衡点可以调整。人的行为受到相反的动机系统控制：趋近系统（approach system）引发正面情绪，逃避系统（withdrawal system）引发消极情绪。两系统不断监控环境，且会在同一时间产生相反动机。<ul><li>逃避系统反应迅速的原因是得到信息的速度快。视觉听觉信号首先进入丘脑，在进入杏仁核（司危险信号处理），或皮质不同器官处理区再转到额叶进行高级心理处理。杏仁核就在丘脑下方，所以首先发出指令。</li><li>杏仁核也上连额叶皮质，改变思考。想法产生情绪，情绪也产生想法。情绪通过“心理过滤器”处理信息。<ul><li>“万物皆着我之色彩”的心理学解释。</li></ul></li></ul></li></ul></li><li>强大的遗传基因<ul><li>每一项个性特质，都有一定的遗传因素。<ul><li>同卵双胞胎相似度高于异卵双胞胎，即便在不同环境下成长，亦是如此。</li></ul></li><li>个人心情愉悦程度有 50-80% 来自遗传。<ul><li>个人心情愉悦程度（affect style）：个人的趋近系统及逃避系统之间的平衡点。</li><li>皮质左撇子（cortical lefties）：左半脑脑波比较活跃者，自认为心情更愉快，不会一直害怕、焦虑、羞愧，不易陷入沮丧，心情复原快。</li></ul></li></ul></li></ol><h3 id="改变思维的-3-种方法"><a href="#改变思维的-3-种方法" class="headerlink" title="改变思维的 3 种方法"></a>改变思维的 3 种方法</h3><ol><li>冥想</li><li>认知疗法<ul><li>训练病人掌握自己的想法，指出扭曲之处，找替代方案及更正确的思考方式。</li></ul></li><li>选择性血清素再吸收抑制剂（SSRI）<ul><li>Paxil、Zoloft、Celexa、Lexapro</li><li>效果几乎和认知疗法一样，不只缓解症状，还可以改变个性：自信，更能面对挫败，享受欢乐。</li></ul></li></ol><hr><h1 id="第二部分-我们如何相处：象的力量"><a href="#第二部分-我们如何相处：象的力量" class="headerlink" title="第二部分 我们如何相处：象的力量"></a>第二部分 我们如何相处：象的力量</h1><h2 id="第三章-互惠"><a href="#第三章-互惠" class="headerlink" title="第三章 互惠"></a>第三章 互惠</h2><h3 id="群居动物有“牺牲自我以利家族”特性。"><a href="#群居动物有“牺牲自我以利家族”特性。" class="headerlink" title="群居动物有“牺牲自我以利家族”特性。"></a>群居动物有“牺牲自我以利家族”特性。</h3><h3 id="人类有无心、自发式的互惠本能。"><a href="#人类有无心、自发式的互惠本能。" class="headerlink" title="人类有无心、自发式的互惠本能。"></a>人类有无心、自发式的互惠本能。</h3><h3 id="互惠的应用"><a href="#互惠的应用" class="headerlink" title="互惠的应用"></a>互惠的应用</h3><ul><li>以牙还牙<ul><li>报仇和报恩</li><li>建立群体合作关系</li></ul></li><li>用语言造势<ul><li>Robin Dunbar（罗宾 邓巴）<ul><li>大脑越大，可管理的群体越大。</li><li>语言的进化是为了取代梳毛功能，帮助群体成员很快地建立彼此关系。</li></ul></li><li>用留言互惠交换信息。</li><li>八卦消息主要在评论别人能不能人与人的互惠之道。</li></ul></li><li>讨价还价<ul><li>先提出苛刻条件，再让步，不仅可以得到较好的条件，还能得到一个愉快的合作伙伴，因为对方觉得他们有决定最后结果的影响力。</li></ul></li></ul><h2 id="第四章-自以为是"><a href="#第四章-自以为是" class="headerlink" title="第四章 自以为是"></a>第四章 自以为是</h2><h3 id="虚伪的原因"><a href="#虚伪的原因" class="headerlink" title="虚伪的原因"></a>虚伪的原因</h3><ul><li>重视道德表象胜过道德真相</li><li>先做判断，再编造说辞<ul><li>对自己的立场提不出真实证据</li><li>不会费力寻找不符合自己立场的证据</li></ul></li><li>无意识的自我膨胀<ul><li>认为自己更好，挑选能证明这一点的证据</li></ul></li><li>天真实在论（naive realism）<ul><li>每个人都会受到自身意识形态及利益所影响，只有自己例外，只有自己看到的事情是绝对事实。</li></ul></li></ul><h3 id="邪恶与残暴的原因"><a href="#邪恶与残暴的原因" class="headerlink" title="邪恶与残暴的原因"></a>邪恶与残暴的原因</h3><ul><li>善恶之争<ul><li>宗教困惑：如果上帝全知全能，那么世界上存在恶，是因为上帝允许其存在（上帝并非全善），或者上帝也对抗邪恶（上帝并非全能）。</li></ul></li><li>自尊心太强</li><li>道德理想主义<ul><li>认为目的可以让手段合理化</li></ul></li></ul><hr><h1 id="第三部分-追求幸福的方法：驭象之道"><a href="#第三部分-追求幸福的方法：驭象之道" class="headerlink" title="第三部分 追求幸福的方法：驭象之道"></a>第三部分 追求幸福的方法：驭象之道</h1><h2 id="第五章-幸福来自何处"><a href="#第五章-幸福来自何处" class="headerlink" title="第五章 幸福来自何处"></a>第五章 幸福来自何处</h2><h3 id="幸福的两个原则"><a href="#幸福的两个原则" class="headerlink" title="幸福的两个原则"></a>幸福的两个原则</h3><ol><li>进展原则<ul><li>朝着目标前进比达成目标要幸福。<ul><li>pre-goal attainment positive affect：每朝目标前进一步，都会感到幸福与满足。</li><li>post-goal attainment positive affect：达到目标时，只感到一点点短暂的幸福。</li></ul></li></ul></li><li>适应原则<ul><li>人对现状的判断，是以比自己现已适应的更好或更坏为基准。</li></ul></li></ol><h3 id="幸福研究结果"><a href="#幸福研究结果" class="headerlink" title="幸福研究结果"></a>幸福研究结果</h3><ul><li>1 基因对个人的平均幸福程度影响很大</li><li>2 大部分环境因素及人口统计因素对幸福影响甚微<ul><li>个人生活条件：持续一段时间，然后适应。</li><li>个人选择的自发活动：反应不会递减，能带来更多幸福。</li></ul></li><li>感受到的幸福持久度（H）= 遗传的幸福范围（S）+ 生活条件（C）+ 可控因素（V）</li></ul><h3 id="可改变的外在因素"><a href="#可改变的外在因素" class="headerlink" title="可改变的外在因素"></a>可改变的外在因素</h3><ul><li>噪音</li><li>通勤</li><li>自我掌控感<ul><li>David Glass 和 Jerome Singer 噪音按钮实验：得知噪音可以被按钮关闭，被试可以忍住不按按钮。</li><li>Ellen Langer 和 Judith Rodin 养老院实验：有控制权的老人获得更开心、更活跃，头脑更清醒，死亡率降低。</li></ul></li><li>羞愧<ul><li>去除羞愧感（整容）</li></ul></li><li>人际关系<ul><li>人永远无法适应人际冲突</li></ul></li></ul><h3 id="可控因素（V）"><a href="#可控因素（V）" class="headerlink" title="可控因素（V）"></a>可控因素（V）</h3><ul><li>心流体验<ul><li>每进一步都有反馈（进展原则）</li></ul></li><li>掌握自身优势<ul><li>待人和善</li><li>懂得感激</li></ul></li></ul><h2 id="第六章-爱与依恋"><a href="#第六章-爱与依恋" class="headerlink" title="第六章 爱与依恋"></a>第六章 爱与依恋</h2><h3 id="接触性安慰（contact-comfort）是基本需要"><a href="#接触性安慰（contact-comfort）是基本需要" class="headerlink" title="接触性安慰（contact comfort）是基本需要"></a>接触性安慰（contact comfort）是基本需要</h3><ul><li>Harry Harlow 幼猴实验</li><li>John Bowlby 依恋理论（Attachment Theory）<ul><li>儿童行为受到“安全”和“探索”两个目标引导。在安全度达到一定程度之后，儿童才会嬉戏玩耍、四处探索。</li><li>如果儿童无法获得稳定持久的依恋关系，就可能变成冷漠孤独的人，或者非常黏人。</li><li>依赖特质的三种类型<ul><li>Mary Ainsworth 陌生情境（strange situation）实验</li><li>安全型（secure attachment）<ul><li>游戏及寻求安全感会随着环境变动顺畅地更替</li></ul></li><li>逃避型（avoidant attachment）<ul><li>靠自己压抑分离焦虑</li></ul></li><li>对抗型（resistant attachment）<ul><li>无法在不熟悉的房间内安静下来，一直焦虑不安，母亲回来后还会抗拒母亲的百般抚慰</li></ul></li></ul></li><li>依恋与年龄的关系<ul><li>8 岁以下：父母</li><li>8-14 岁：扩散到伙伴</li><li>15-17 岁：爱侣</li></ul></li></ul></li></ul><h3 id="19-世纪社会学家-Emile-Durkheim（涂尔干）"><a href="#19-世纪社会学家-Emile-Durkheim（涂尔干）" class="headerlink" title="19 世纪社会学家 Emile Durkheim（涂尔干）"></a>19 世纪社会学家 Emile Durkheim（涂尔干）</h3><ul><li>社会规范、联系与义务越少的人，越可能自杀。</li><li>人需要义务及约束来为自己的生命建立构架和意义。</li><li>失范（anomie）：人因社会缺乏明确标准或权威社会组织来建立价值标准，反而难以找出自己想做的事情。</li></ul><h2 id="第七章-心理的成长"><a href="#第七章-心理的成长" class="headerlink" title="第七章 心理的成长"></a>第七章 心理的成长</h2><h3 id="创伤后成长（posttraumatic-growth）"><a href="#创伤后成长（posttraumatic-growth）" class="headerlink" title="创伤后成长（posttraumatic growth）"></a>创伤后成长（posttraumatic growth）</h3><ul><li>激发潜能，改变原本对自己的观念。</li><li>过滤、改变人际关系。</li><li>改变人生的优先顺序，及对他人的看法。</li></ul><h3 id="人格的三个层次（Dan-McAdams）"><a href="#人格的三个层次（Dan-McAdams）" class="headerlink" title="人格的三个层次（Dan McAdams）"></a>人格的三个层次（Dan McAdams）</h3><ol><li>基本特质（basic traits）<ul><li>神经质倾向，外向或内向，对新事物的接受程度，是否讨喜，认真勤恳。</li></ul></li><li>个别性调适（characteristic adaptions）<ul><li>个人目标，防卫与适应机制，信仰，不同人生阶段的生活重心。</li><li>与个人所处环境、人生阶段紧密结合。当事实变化时，会有所改变。</li><li>逆境可能帮助人调整生活重心。</li></ul></li><li>人生故事<ul><li>骑象人诠释自己行为的意义。</li><li>逆境为故事提供题材。</li></ul></li></ol><h3 id="从逆境中获益"><a href="#从逆境中获益" class="headerlink" title="从逆境中获益"></a>从逆境中获益</h3><ul><li>乐观的人更容易从逆境中胜出。</li><li>愿意倾诉或有支援团体协助的受害者，更能大幅减轻创伤造成的健康问题。</li><li>宣泄的重点不在怒气，而在于写出充满意义的人生故事。多年后，依然能从“重新评估”这套因应之道中获益。</li></ul><h3 id="应对危机的方法分类"><a href="#应对危机的方法分类" class="headerlink" title="应对危机的方法分类"></a>应对危机的方法分类</h3><ul><li>积极面对：直接采取行动解决问题。</li><li>重新评估：理清想法，找出有利的做法。</li><li>逃避<ul><li>消极的做法。</li><li>发展心理防卫机制，控制内心痛苦。</li></ul></li></ul><h3 id="正确的步骤"><a href="#正确的步骤" class="headerlink" title="正确的步骤"></a>正确的步骤</h3><ul><li>在逆境之前，先改变认知方式。冥想、认知疗法、百忧解。</li><li>珍惜并建立自己的社会支持网络。倾诉有助于理清并找出事件的意义。</li><li>事件发生后写下经过、感受、产生感受的原因，每天 15 分钟。回答两个问题：事件为什么发生？能从中汲取什么好的教训？</li></ul><h3 id="17-20-岁是经历逆境的最好时期"><a href="#17-20-岁是经历逆境的最好时期" class="headerlink" title="17-20 岁是经历逆境的最好时期"></a>17-20 岁是经历逆境的最好时期</h3><ul><li>自我形成的特殊时期</li><li>对以后的人生故事产生最深影响</li></ul><h3 id="创伤中汲取智慧"><a href="#创伤中汲取智慧" class="headerlink" title="创伤中汲取智慧"></a>创伤中汲取智慧</h3><ul><li>知识<ul><li>显性（explicit）<ul><li>所知的，不受时空条件所限的事实。</li></ul></li><li>默会（tacit）<ul><li>智慧的来源</li><li>知其所以然</li></ul></li></ul></li><li>智慧<ul><li>在自己和他人的需求间找到平衡。</li><li>平衡地采用回应方式<ul><li>自我调适：改变自己以适应环境</li><li>塑造环境：改变环境</li><li>选择：选择环境</li></ul></li></ul></li></ul><h2 id="第八章-道德的成长"><a href="#第八章-道德的成长" class="headerlink" title="第八章 道德的成长"></a>第八章 道德的成长</h2><h3 id="道德焦点"><a href="#道德焦点" class="headerlink" title="道德焦点"></a>道德焦点</h3><ul><li>从人格道德（character ethics）转向困境道德（quandary ethics）。</li><li>道德教育成为解决问题的训练，思考特定情境中的道德问题。</li><li>道德窄化为“自私自利”的反义词。</li><li>道德分析是糟糕的心理学训练。</li></ul><h3 id="1988-年塞利格曼积极心理学"><a href="#1988-年塞利格曼积极心理学" class="headerlink" title="1988 年塞利格曼积极心理学"></a>1988 年塞利格曼积极心理学</h3><ul><li>6 种美德：智慧、知识、勇气、仁爱、正义、节制</li></ul><h3 id="单靠意志力改变劣势困难"><a href="#单靠意志力改变劣势困难" class="headerlink" title="单靠意志力改变劣势困难"></a>单靠意志力改变劣势困难</h3><ul><li>认知疗法。</li><li>要运用优势克服劣势，努力表现原有的人格优点。</li></ul><h3 id="美德的科学解释"><a href="#美德的科学解释" class="headerlink" title="美德的科学解释"></a>美德的科学解释</h3><ul><li>亲缘利他（kin altruism）：有利于带有同样基因的人。</li><li>互惠利他（reciprocal altruism）：在非零和游戏中，运用一报还一报策略，使带有别的基因的人直接得到帮助。</li></ul><h3 id="施比受更令人幸福"><a href="#施比受更令人幸福" class="headerlink" title="施比受更令人幸福"></a>施比受更令人幸福</h3><h3 id="自由派"><a href="#自由派" class="headerlink" title="自由派"></a>自由派</h3><ul><li>对不同团体采取开放态度</li></ul><h3 id="保守派"><a href="#保守派" class="headerlink" title="保守派"></a>保守派</h3><ul><li>建立社会共同价值</li></ul><h3 id="合众为一（e-pluribus-unum）"><a href="#合众为一（e-pluribus-unum）" class="headerlink" title="合众为一（e pluribus, unum）"></a>合众为一（e pluribus, unum）</h3><ul><li>当推崇群体的同时，也应该通过政策来巩固个体的价值。</li></ul><hr><h1 id="第四部分-追寻人生的意义：驭象而奔"><a href="#第四部分-追寻人生的意义：驭象而奔" class="headerlink" title="第四部分 追寻人生的意义：驭象而奔"></a>第四部分 追寻人生的意义：驭象而奔</h1><h2 id="第九章-灵性的觉醒"><a href="#第九章-灵性的觉醒" class="headerlink" title="第九章 灵性的觉醒"></a>第九章 灵性的觉醒</h2><h3 id="道德水准会因为个人所思所为而提升或沉沦。"><a href="#道德水准会因为个人所思所为而提升或沉沦。" class="headerlink" title="道德水准会因为个人所思所为而提升或沉沦。"></a>道德水准会因为个人所思所为而提升或沉沦。</h3><h3 id="道德观念"><a href="#道德观念" class="headerlink" title="道德观念"></a>道德观念</h3><ul><li>自主权的道德规范：思考与行动，保护个体免受伤害，追求个人最大自主权。</li><li>群体的道德规范：</li><li>神性的道德规范</li></ul><h3 id="提升感"><a href="#提升感" class="headerlink" title="提升感"></a>提升感</h3><ul><li>体内分泌催产素（泌乳）</li><li>产生亲密感、爱、信任，更愿意接受新的关系</li></ul><h3 id="敬畏"><a href="#敬畏" class="headerlink" title="敬畏"></a>敬畏</h3><ul><li>遇到巨大之物</li><li>面对伟大崇高之物</li></ul><h3 id="巅峰体验（peak-experience）"><a href="#巅峰体验（peak-experience）" class="headerlink" title="巅峰体验（peak experience）"></a>巅峰体验（peak experience）</h3><h3 id="“自我”是精神提升的障碍"><a href="#“自我”是精神提升的障碍" class="headerlink" title="“自我”是精神提升的障碍"></a>“自我”是精神提升的障碍</h3><ul><li>以自我为中心的思考模式，让人困于物质的世俗世界，无法感受神圣。<ul><li>沉思让自我安静下来。</li></ul></li><li>精神层面的改变就是自我的转变，但自我会全力反对。</li><li>精神层面的提升后时候需要否定自我。</li></ul><h2 id="第十章-人生的意义"><a href="#第十章-人生的意义" class="headerlink" title="第十章 人生的意义"></a>第十章 人生的意义</h2><h3 id="两个子问题"><a href="#两个子问题" class="headerlink" title="两个子问题"></a>两个子问题</h3><ol><li>人生目的<ul><li>没有目的</li></ul></li><li>怎么才能有充实且有意义的人生</li></ol><h3 id="什么令人感受到“人生本身”的目的"><a href="#什么令人感受到“人生本身”的目的" class="headerlink" title="什么令人感受到“人生本身”的目的"></a>什么令人感受到“人生本身”的目的</h3><ul><li>爱与工作<ul><li>Robert White 效能动机（effectance motive）：人和许多其他哺乳动物有一种“让事情发生”的基本冲动，表现为想通过与环境互动，进而控制自己的环境，以发展能力。</li><li>可以解释过程原则（朝目标前进与达成目标，前者更能带来快乐）。<ul><li>从事低复杂度、高重复单调工作的人，对工作疏离感高。</li></ul></li></ul></li></ul><h3 id="对工作的不同态度"><a href="#对工作的不同态度" class="headerlink" title="对工作的不同态度"></a>对工作的不同态度</h3><ul><li>差事：赚钱</li><li>职业：追求订立的目标：升迁、名声</li><li>事业：实现抱负</li><li>“你认为工作本身是什么，它就是什么。”</li></ul><h3 id="全心投入（vital-engagent）"><a href="#全心投入（vital-engagent）" class="headerlink" title="全心投入（vital engagent）"></a>全心投入（vital engagent）</h3><ul><li>个人与一个心流体验及个人主观认定的意义所组成的世界间的关系。</li><li>兴趣转化为一种关系，成为人生目的之一。</li></ul><h3 id="行业健康"><a href="#行业健康" class="headerlink" title="行业健康"></a>行业健康</h3><ul><li>整体协调（alignment）<ul><li>做出高品质工作、对别人有所贡献的人，能得到财富及专业上的提升。</li></ul></li></ul><h3 id="跨层次一致性"><a href="#跨层次一致性" class="headerlink" title="跨层次一致性"></a>跨层次一致性</h3><ul><li>人的个性的跨层次具有一致性时，人生能一路前进。</li><li>低层次的个人特质能和应变机制相配合</li><li>应变机制能和人生故事相连贯</li><li>几个层次无法连贯一致时，遭受内在矛盾和神经官能性冲突。<ul><li>此时可能需要逆境的启蒙，找出一致性。</li></ul></li></ul><h3 id="人的层次"><a href="#人的层次" class="headerlink" title="人的层次"></a>人的层次</h3><ol><li>社会文化<ul><li>文化心理学：心理学向上延伸到社会文化层次</li></ul></li><li>心理<ul><li>认知神经科学：心理学向下延伸到生理层次</li></ul></li><li>身体和大脑</li></ol><ul><li>意义在三个层次连贯一致时自动浮现</li></ul><h3 id="“自我”开关"><a href="#“自我”开关" class="headerlink" title="“自我”开关"></a>“自我”开关</h3><ul><li>Andrew Newberg</li><li>大脑顶叶定位关系区（orientation association areas）<ul><li>左半球：对自己的身体产生有限及具体的感觉，让人追踪自己的身体轮廓。</li><li>右半球：对周遭空间产生方位感。</li></ul></li><li>被试在冥想状态关闭这块皮层时，从大脑其他部位传递的信息减少，被试体验到自我消失，扩散到太空。</li><li>含有重复动作及话语的仪式，尤其是众人同时进行的仪式，有助于协助参与者在大脑建立“共振形态”（resonance patterns），产生以上效果。</li></ul><h3 id="作者的幸福假设"><a href="#作者的幸福假设" class="headerlink" title="作者的幸福假设"></a>作者的幸福假设</h3><ul><li>幸福不能直接找到，须先具备一定条件。</li><li>个人性格不同层次及部分连贯一致。</li><li>爱与工作，全心投入，在群体中感受超越自我的意义感。</li><li>条件达到后，人生的目的和意义是自然浮现的。</li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/09/21/reading-the-happiness-hypothesis/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python 相关程序安装</title>
      <link>http://tuliren.github.io/2017/09/10/python-installation/</link>
      <guid>http://tuliren.github.io/2017/09/10/python-installation/</guid>
      <pubDate>Sun, 10 Sep 2017 17:07:16 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Python 相关的程序实在是太多了，不仅有 Python 2 和 3，在 Mac 还可以通过 brew 安装。另外在不同的依赖管理程序（pip、conda）以及虚拟环境（virtualenv）中也可以制定不同的 Python 版本。所以非常有必要把安装设置过程写下来。&lt;/
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Python 相关的程序实在是太多了，不仅有 Python 2 和 3，在 Mac 还可以通过 brew 安装。另外在不同的依赖管理程序（pip、conda）以及虚拟环境（virtualenv）中也可以制定不同的 Python 版本。所以非常有必要把安装设置过程写下来。</p><h1 id="Python-安装"><a href="#Python-安装" class="headerlink" title="Python 安装"></a>Python 安装</h1><p>参考：<a href="http://docs.python-guide.org/en/latest/starting/install/osx/" target="_blank" rel="external">链接</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">brew install python</div><div class="line">brew install python3</div><div class="line"></div><div class="line">&gt; python -V    # 系统 Python banben</div><div class="line">&gt; python2 -V   # brew Python 2 版本</div><div class="line">&gt; python3 -V   # brew Python 3 版本</div><div class="line"></div><div class="line">&gt; type python2 # python2 is /usr/local/bin/python2</div><div class="line">&gt; type python3 # python3 is /usr/local/bin/python3</div><div class="line">&gt; type python  # python is hashed (/usr/bin/python)</div></pre></td></tr></table></figure></p><h1 id="Pip-安装"><a href="#Pip-安装" class="headerlink" title="Pip 安装"></a>Pip 安装</h1><p>通过 brew 安装 Python 的时候，会同时安装 pip。如果 pip 依然不存在，需要重新 link python：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew unlink python &amp;&amp; brew link python</div></pre></td></tr></table></figure></p><h1 id="Virtualenv-安装"><a href="#Virtualenv-安装" class="headerlink" title="Virtualenv 安装"></a>Virtualenv 安装</h1><p>参考：<a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/#lower-level-virtualenv" target="_blank" rel="external">链接</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div><div class="line"></div><div class="line">&gt; virtualenv --version</div></pre></td></tr></table></figure></p><h1 id="Virutalenv-使用"><a href="#Virutalenv-使用" class="headerlink" title="Virutalenv 使用"></a>Virutalenv 使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># virtualenv -p &lt;path-to-python&gt; &lt;env-name&gt;</div><div class="line"></div><div class="line"># python 2</div><div class="line">virtualenv -p /usr/local/bin/python2 venv</div><div class="line"></div><div class="line"># python 3</div><div class="line">virtualenv -p /usr/local/bin/python3 venv</div></pre></td></tr></table></figure><p>运行后，当前目录下会出现 <code>venv</code> 文件夹，其中包括了项目所需的所有可执行文件以及 pip。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 激活创建的环境</div><div class="line">source venv/bin/activate</div><div class="line"></div><div class="line"># 退出本地环境</div><div class="line">deactivate</div></pre></td></tr></table></figure><p>使用 pip 安装依赖包之后，输出当前环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip freeze &gt; requirements.txt</div></pre></td></tr></table></figure></p><p>根据要求安装依赖包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install -r requirements.txt</div></pre></td></tr></table></figure></p><h1 id="Anaconda-安装"><a href="#Anaconda-安装" class="headerlink" title="Anaconda 安装"></a>Anaconda 安装</h1><p>在 <a href="https://www.anaconda.com/download/" target="_blank" rel="external">anaconda</a> 主站下载 Python3-anaconda 的安装包。安装之后，更新所有已经安装的包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conda upgrade --all</div></pre></td></tr></table></figure></p><p>如果出现 <code>conda command not found</code>，手动把 anaconda 添加到路径里去：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PATH=&quot;/Users/&lt;username&gt;/anaconda/bin:$PATH&quot;</div></pre></td></tr></table></figure></p><h1 id="Anaconda-使用"><a href="#Anaconda-使用" class="headerlink" title="Anaconda 使用"></a>Anaconda 使用</h1><p>依赖包管理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 显示</div><div class="line">conda list</div><div class="line"></div><div class="line"># 安装</div><div class="line">conda install &lt;pagecakge-name&gt; &lt;more-packages&gt;</div></pre></td></tr></table></figure></p><p>环境管理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># 显示</div><div class="line">conda env list</div><div class="line"></div><div class="line"># 创建</div><div class="line">conda create -n &lt;env-name&gt; python=&lt;python-version&gt; &lt;list-of-packages&gt;</div><div class="line"></div><div class="line"># 创建 Python2 和 Python3</div><div class="line">conda create -n py2 python=2</div><div class="line">conda create -n py3 python=3</div><div class="line"></div><div class="line"># 激活</div><div class="line">source activate &lt;env-name&gt;</div><div class="line"></div><div class="line"># 退出</div><div class="line">source deactivate</div><div class="line"></div><div class="line"># 导出</div><div class="line">conda env export &gt; environment.yaml</div><div class="line"></div><div class="line"># 导入</div><div class="line">conda env create -f environment.yaml</div></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/09/10/python-installation/#disqus_thread</comments>
    </item>
    
    <item>
      <title>读书笔记：专念</title>
      <link>http://tuliren.github.io/2017/09/07/reading-mindfulness/</link>
      <guid>http://tuliren.github.io/2017/09/07/reading-mindfulness/</guid>
      <pubDate>Thu, 07 Sep 2017 02:46:14 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;链接：&lt;a href=&quot;https://book.douban.com/subject/10545175/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;专念：积极心理学的力量&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一章-潜念的特征&quot;&gt;&lt;a href=&quot;#第一
        
      
      </description>
      
      <content:encoded><![CDATA[<p>链接：<a href="https://book.douban.com/subject/10545175/" target="_blank" rel="external">专念：积极心理学的力量</a></p><h1 id="第一章-潜念的特征"><a href="#第一章-潜念的特征" class="headerlink" title="第一章 潜念的特征"></a>第一章 潜念的特征</h1><ul><li>潜念：mindlessness</li><li>归类陷阱<ul><li>我们用许多套不同的类别对各种现象进行感知和整理。某些类别一旦被创造出来，就具有很强的生命力，不易被轻易消除。这类就这样在头脑中创造了被大家共同感知的世界，并称为它的奴隶。</li></ul></li><li>无意识行为<ul><li>人们无需受到明显的意愿和意志干预，就能按照既往习惯无意识地行动。</li></ul></li><li>视角单一<ul><li>遵从单一的规则行事。过于具体的要求，容易催生潜念。</li></ul></li></ul><h1 id="第二章-潜念的根源"><a href="#第二章-潜念的根源" class="headerlink" title="第二章 潜念的根源"></a>第二章 潜念的根源</h1><ul><li>重复<ul><li>当我们通过反复练习，非常熟练地掌握一种技能后，该技能各组成部分之间的界限就会变得模糊，而且会从意识中淡出。</li></ul></li><li>不成熟的认知承诺<ul><li>依照不成熟的思维定势行事。</li><li>此类思维定势常在初次碰到某类事物时形成，由于没有进行深入思考，所以称为不成熟的认知承诺。</li></ul></li><li>有限假设<ul><li>在资源、能力有限假设下，各种类别的界限清晰稳定，因此可以采用稳定的规则。</li><li>假设不成立时，不重新检视这些规则，导致僵化思维。</li><li>类似的还有熵的概念，时间的线性观。</li></ul></li><li>以结果为导向的教育<ul><li>重视结果，而忽略当下的细节。<ul><li>如果以过称为导向，则重视实现目标的各个步骤。</li></ul></li><li>将知识作为普适的事实教授。</li></ul></li><li>背景的作用<ul><li>例如在医院里小声说话</li><li>背景控制人的行为</li><li>对背景的反应模式在儿时习得</li><li>背景混淆<ul><li>大多数人假设别人的动机和自己的一致。但一种行为背后的含义有多种。</li><li>人容易被主流价值观洗脑，用主流价值观来衡量自己的行为，忘记初衷。</li></ul></li></ul></li><li>相似概念<ul><li>习惯</li><li>潜意识<ul><li>潜念的想法在形成初期是可以被意识加工处理的</li><li>潜意识的想法一开始就不可知</li></ul></li></ul></li></ul><h1 id="第三章-潜念的代价"><a href="#第三章-潜念的代价" class="headerlink" title="第三章 潜念的代价"></a>第三章 潜念的代价</h1><ul><li>狭隘的自我形象<ul><li>让人和企业变得脆弱</li><li>比较自己与别人的行为结果，错误地产生轻视自己的情绪</li><li>自我设限<ul><li>自我诱导型依赖<ul><li>人潜念地收到特定身份标签的不利影响</li></ul></li></ul></li></ul></li><li>无心的冷酷<ul><li>Stanley Milgram 电击实验<ul><li>被试在实验人员权威指导下，对学习者“实施”了足以致命的电击。</li></ul></li></ul></li><li>控制力丧失<ul><li>将失败婚姻归咎于前夫的女士更难以走出困境。</li><li>认为酗酒倾向是遗传的酒鬼会放弃让自己恢复正常生活的控制力。</li><li>人们一旦认定用一种方法就可以解出所有算术题，他们就不会寻找其他方法，即便更简单的算法存在。</li></ul></li><li>习得性无助<ul><li>常由屡次失败造成</li><li>无视新的有利信息，完全放弃对自己的控制权</li><li>努力寻求各种积极信号，这种心理定势可以打破。</li></ul></li><li>未发挥的潜能</li></ul><h1 id="第四章-专念的特征"><a href="#第四章-专念的特征" class="headerlink" title="第四章 专念的特征"></a>第四章 专念的特征</h1><ul><li>专念：mindfulness</li><li>创造新类别<ul><li>专念让我们注意情境的细节和背景</li><li>偏见的产生多是因为没有对人和事进行详细的描述。不断细分会使我们发现原本讨厌的人和事值得欣赏的品质。</li></ul></li><li>接受新信息</li><li>从不同视角看问题<ul><li>在评判他人行为的时候，我们的判断标准是自己会不会这么做，或者自己能否做到。因此，当别人表扬你的时候，很可能是因为因为他们自己做不到，而不是因为你的行为真的了不起。</li><li>秉持单一视角的人只能自动做出反应，没有其他选择。</li></ul></li><li>专念带来增强的控制力，可以改变背景<ul><li>疼痛体验实际上取决于所处的背景环境，可以通过乐观的心态降低痛感。</li></ul></li><li>以过程为导向<ul><li>单方面比较结果容易造成自责和妄自菲薄。结果的不同来自最初的不同选择，以及过程的不同。</li></ul></li><li>与东方哲学中概念的区别<ul><li>东方的“念”具有重要的道德意义。</li><li>东西方的“念”都让人不被成见束缚，打破条条框框。</li></ul></li></ul><h1 id="第五章-专念的好处：打破成见"><a href="#第五章-专念的好处：打破成见" class="headerlink" title="第五章 专念的好处：打破成见"></a>第五章 专念的好处：打破成见</h1><ul><li>给老人适当的选择和决策自由，赋予更多的责任，可以让老人更积极、健康，寿命更长。</li><li>给予的决策权和选择要适量，否则造成焦虑和拒绝决策。</li><li>善意的保护会削弱自主性。</li><li>逆转记忆力的衰退</li><li>人生是由一小段一小段被目标引导的轨迹构成的，这些轨迹相对独立。过去的行为对整个人生造成的影响并没有我们想象那么大。</li></ul><h1 id="第六章-专念的好处：创新"><a href="#第六章-专念的好处：创新" class="headerlink" title="第六章 专念的好处：创新"></a>第六章 专念的好处：创新</h1><ul><li>打破成见的束缚，接纳新信息和不寻常的事物，注重过程，实现创新。</li><li>在教学中引入不确定性，使用有条件的陈述，以避免思维僵化。</li><li>创造力<ul><li>区分：发散性生成，从旧信息推演新信息的能力，产生新类别。</li><li>类比：思想的重新定义，背景转换，类比的能力。</li></ul></li><li>管理者要容忍不确定性，可以激发创新。</li></ul><h1 id="第七章-专念的好处：为工作注入活力"><a href="#第七章-专念的好处：为工作注入活力" class="headerlink" title="第七章 专念的好处：为工作注入活力"></a>第七章 专念的好处：为工作注入活力</h1><ul><li>疲劳和厌倦在很大程度上来源于未经仔细推敲的预期。疲劳和餍足并没有固定不变的极限。</li><li>类似柯立芝效应（coolidge effect）</li><li>在新背景下，精疲力竭的人会产生新能量。具有专念意识的人会主动改变环境，使自己保持充沛精力。</li><li>一项工作做得时间长了，产生耗尽和枯竭感的原因：<ul><li>确定性导致新鲜感丧失</li><li>工作中没有控制力，缺乏自主</li><li>组织中官僚作风盛行</li></ul></li></ul><h1 id="第八章-专念的好处：消除歧视"><a href="#第八章-专念的好处：消除歧视" class="headerlink" title="第八章 专念的好处：消除歧视"></a>第八章 专念的好处：消除歧视</h1><ul><li>分类是人的天性。要消除歧视，不能通过减少分类的办法，而要创造更多的类别。</li><li>给人贴上一类标签会让人更专念（注重细节特征），加深偏见。</li><li>专注和好奇心同样可以消除歧视。</li><li>用专念的思维方式，可以看到，每个人在某些方面都是“异类”，以此“细分”可以消除偏见。</li><li>被试通过训练可以认识到，残疾与特定功能相关，而不是与个人相关。各种属性是相对的，残障的定义取决于背景。</li></ul><h1 id="第九章-专念的好处：整合身心"><a href="#第九章-专念的好处：整合身心" class="headerlink" title="第九章 专念的好处：整合身心"></a>第九章 专念的好处：整合身心</h1><ul><li>身心二元论的观念根深蒂固，是不成熟的认知承诺。<ul><li>笛卡尔的身心二元论：心灵是非物质的，身体是物质的。只有身体遵从机械定律。</li><li>反例<ul><li>婴儿得不到足够的爱抚或良性刺激，会发育迟滞甚至死亡。</li><li>在正常病房逐渐康复的病人，被送回“无望”病房导致一命呜呼。</li></ul></li></ul></li><li>认知与情感二元论，认为情感体验无需认知过程。<ul><li>反驳：认知和情感是完整反映的组成部分。</li><li>由于背景不同，相同的刺激会引起不同的情绪。大多数由背景唤起的情绪是习得的，我们并没有对情绪的起因进行缜密思考。</li><li>没有意识到不同背景下的某种刺激会变成不同的刺激，我们就成为了各种心理定势的受害者，因而被动接受，认为自己被无选择。<ul><li>人对癌症筛查中的活体组织检查感到恐惧。害怕的原因不是检查本身，而是检查结果的含义。</li></ul></li><li>情感离不开背景，而认知创造了这一背景。所以情感和认知是一体的。</li><li>影响健康的许多因素来自外部环境，但每种外部影响的作用有多大，这取决于相关背景。<ul><li>外部因素 -&gt; 人的认知和解释 -&gt; 身体</li></ul></li><li>心理状态能通过大脑中枢以及边缘系统——下丘脑——脑垂体——肾上腺通路影响体内平衡，改变免疫系统对疾病的反应。</li></ul></li><li>背景影响成瘾性<ul><li>当脱离了某种心理状态，我们也就脱了相应的生理状态。接触不良习惯，要先在心理上彻底断绝关系。<ul><li>吸烟这在禁烟环境中烟瘾不大。回到吸烟环境后，烟瘾出现。</li></ul></li><li>一味否定坏习惯，并不能促进人们戒除这种坏习惯。相反，让人们承认坏习惯的好处，并找到能够起相同作用的替代方法，更有效。</li></ul></li><li>传统安慰剂：愚弄身心</li><li>主动性安慰剂：动用身心，更换不健康的背景，调动身体潜能，掌控健康。<ul><li>催眠</li><li>自我心理暗示</li><li>不放弃信念</li><li>想象</li><li>积极思维</li><li>生物反馈</li></ul></li></ul><h1 id="第十章-高效能人士的专念"><a href="#第十章-高效能人士的专念" class="headerlink" title="第十章 高效能人士的专念"></a>第十章 高效能人士的专念</h1><ul><li>选择对那些事情抱有专念态度</li><li>用正确的方式决策，不痴迷于做出最正确的决策。<ul><li>碰到两难境地时，要认识到绝对正确的答案并不存在，决策独立于数据的收集。</li><li>要预设停止研究的时点。超过这一时点，动用直觉进行选择。</li></ul></li><li>专念思考的产物有时相互矛盾。决策的根本依据是个人价值观。</li></ul>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2017/09/07/reading-mindfulness/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2016 阅读总结</title>
      <link>http://tuliren.github.io/2016/12/11/reading-2016-summary/</link>
      <guid>http://tuliren.github.io/2016/12/11/reading-2016-summary/</guid>
      <pubDate>Sun, 11 Dec 2016 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;2016 年定下本月 3 本书的目标。现在年关将至，手头正在读的书年底之前应该是读不完了。所以可以进行总结了。&lt;/p&gt;
&lt;p&gt;今年共读完 30 本，其中包括 3 本速读或略读， 比计划少了 6 本。比较落后的是 8 月和 10 月，各读完一本，分别是《Enterprise 
        
      
      </description>
      
      <content:encoded><![CDATA[<p>2016 年定下本月 3 本书的目标。现在年关将至，手头正在读的书年底之前应该是读不完了。所以可以进行总结了。</p><p>今年共读完 30 本，其中包括 3 本速读或略读， 比计划少了 6 本。比较落后的是 8 月和 10 月，各读完一本，分别是《Enterprise Rails》和《未来简史》。可惜现在已经记不清为什么这两个月完成度比较低了。前者可能因为我的固定阅读环境（上下班地铁）并不适合任何包含代码的书，所以阅读效率比较低。</p><p>2017 年计划保持阅读速度，按照<a href="https://mp.weixin.qq.com/s?__biz=MzA4ODM4ODQ3MQ==&amp;mid=400064046&amp;idx=1&amp;sn=a138f459257a14f03f967af8d6160df2" target="_blank" rel="external">开智正典</a>的书进行系统化阅读。另外，希望能够完成更多的阅读卡片。</p><p>这 30 本书中，除去计算机技术书籍，值得一读的有以下 19 本。</p><h1 id="认知模因"><a href="#认知模因" class="headerlink" title="认知模因"></a>认知模因</h1><h2 id="机器人叛乱：在达尔文时代找到意义"><a href="#机器人叛乱：在达尔文时代找到意义" class="headerlink" title="机器人叛乱：在达尔文时代找到意义"></a><a href="https://book.douban.com/subject/26412113/" target="_blank" rel="external">机器人叛乱：在达尔文时代找到意义</a></h2><p>★★★★★ 神作！<br>讲述了人类是基因和模因（meme）的双重载体（即奴隶），但是为了适应复杂的环境，基因和模因赋予人类一定范围内的自主性，而这一点自主性就是人类打破奴役枷锁的契机。此书一定程度上等同于进化论及其推论＋《自私的基因》及其推论。之所以称其为神作，是它给出了人类摆脱基因和模因控制的方法，指出人类脱离基因和模因而存在的意义。后半部分关于大脑应该如何防御恶意模因的论述尤其精彩，这是作者送给读者的元（meta）模因武器。</p><h2 id="Zero-to-One"><a href="#Zero-to-One" class="headerlink" title="Zero to One"></a><a href="https://book.douban.com/subject/24753651/" target="_blank" rel="external">Zero to One</a></h2><p>★★★★☆<br>类似《黑客与画家》，硅谷技术大佬从相当独特的视角谈论自己对世界的认知。关于竞争与垄断、成功公司的特质、对未来认知的四个象限等方面的观点都很有意思。</p><h2 id="暗时间"><a href="#暗时间" class="headerlink" title="暗时间"></a><a href="https://book.douban.com/subject/6709809/" target="_blank" rel="external">暗时间</a></h2><p>★★★☆☆<br>此书是刘未鹏的个人博文集合，讨论的内容包括思维方法、认知心理学和时间、效率管理，是启发个人关注自我成长、积极自我洗脑的入门级好书。书中所有的文章好几年前就在他的博客上读过，这次是重温，依然很有帮助。</p><h2 id="智识分子：做个复杂的现代人"><a href="#智识分子：做个复杂的现代人" class="headerlink" title="智识分子：做个复杂的现代人"></a><a href="https://book.douban.com/subject/26692468/" target="_blank" rel="external">智识分子：做个复杂的现代人</a></h2><p>★★★☆☆<br>这本是《万万没想到：用理工科思维理解世界》一书的续编，基本上是对当下热门认知类图书、最新认知研究结论的介绍和总结，主旨和前一本书的副标题基本是一样的：用理性思维理解、处理世界。和《按时间》类似，是启发积极自我洗脑的好书。</p><hr><h1 id="效能管理"><a href="#效能管理" class="headerlink" title="效能管理"></a>效能管理</h1><h2 id="自控力"><a href="#自控力" class="headerlink" title="自控力"></a><a href="https://book.douban.com/subject/10786473/" target="_blank" rel="external">自控力</a></h2><p>★★★★☆<br>基本上是斯坦福同名课程的教案和讲义。在所有读过的关于个人时间、效率管理的书中，这一本是最具有可操作性的，每章都有详细的实践方法。</p><hr><h1 id="人类社会"><a href="#人类社会" class="headerlink" title="人类社会"></a>人类社会</h1><h2 id="人类简史"><a href="#人类简史" class="headerlink" title="人类简史"></a><a href="https://book.douban.com/subject/25985021/" target="_blank" rel="external">人类简史</a></h2><p>★★★★★<br>高度概括人这一物种所经历的三场革命，观点独到，在很多方面刷新三观，比如狩猎采集时期人的幸福感远高于农业时期。中文翻译的质量很高。</p><h2 id="极简欧洲史"><a href="#极简欧洲史" class="headerlink" title="极简欧洲史"></a><a href="https://book.douban.com/subject/5366248/" target="_blank" rel="external">极简欧洲史</a></h2><p>★★★★☆<br>从宗教和文化角度记述的欧洲历史，高度总结概括。</p><h2 id="未来简史"><a href="#未来简史" class="headerlink" title="未来简史"></a><a href="https://book.douban.com/subject/26943161/" target="_blank" rel="external">未来简史</a></h2><p>★★★★☆<br>《人类简史》同作者的作品，是按照人类历史的轨迹，对人类未来的假想。</p><h2 id="万物简史"><a href="#万物简史" class="headerlink" title="万物简史"></a><a href="https://book.douban.com/subject/1225983/" target="_blank" rel="external">万物简史</a></h2><p>★★★★☆<br>非常有趣的科学发展史。</p><h2 id="增长的本质：秩序的进化，从原子到经济"><a href="#增长的本质：秩序的进化，从原子到经济" class="headerlink" title="增长的本质：秩序的进化，从原子到经济"></a><a href="https://book.douban.com/subject/26656350/" target="_blank" rel="external">增长的本质：秩序的进化，从原子到经济</a></h2><p>★★★★☆<br>全书章节之间并不太连贯，作者是专业研究经济产业进化的，先动手写了全书的后半部分，然后再补写了开头的部分。开篇的几章我尤其喜欢，从微观层面讲解了为什么会出现秩序，这个我之前读过一些，不过并没有读懂。这次再读，终于算是明白一点了，我理解就是远离平衡态的系统存在势能差，持续存在的势能差驱使系统内能量或物质定向移动。接着作者从微观推演出去，讲解了信息、物质秩序、经济和经济增长这些概念的本质和关系。另外印象比较深刻的是从作者的研究课题来的几个章节，用数据证明了一个国家的产业进化不是无源之水，只能从已有产业生发出来，产业跳跃是非常困难的。</p><h2 id="可操作的民主"><a href="#可操作的民主" class="headerlink" title="可操作的民主"></a><a href="https://book.douban.com/subject/10563202/" target="_blank" rel="external">可操作的民主</a></h2><p>★★★☆☆<br>讲的是罗伯特议事原则的中国本土化实践。罗伯特议事这么好的东西我居然现在才知道。</p><h2 id="奇点临近"><a href="#奇点临近" class="headerlink" title="奇点临近"></a><a href="https://book.douban.com/subject/6855803/" target="_blank" rel="external">奇点临近</a></h2><p>★★★☆☆<br>畅想未来将被基因、纳米和人工智能统领，对我来说并没有太多新内容，感觉和凯文凯利的一些书比较相似。开篇总结的“直觉的线性增长观与历史的指数增长观”比较有意思：人类倾向于用线性思维预测未来，而技术的发展是遵循指数增长的，因此容易高估技术的近期发展速度，而大大低估长期趋势。</p><h2 id="崩溃：社会如何选择成败兴亡"><a href="#崩溃：社会如何选择成败兴亡" class="headerlink" title="崩溃：社会如何选择成败兴亡"></a><a href="https://book.douban.com/subject/3035593/" target="_blank" rel="external">崩溃：社会如何选择成败兴亡</a></h2><p>★★★☆☆<br>出自《枪炮、病菌与钢铁》同一作者之手，讲述社会决策如何影响其命运。例证详实，论证充分，不过对我并没有太大用处。</p><h2 id="十个词汇里的中国"><a href="#十个词汇里的中国" class="headerlink" title="十个词汇里的中国"></a>十个词汇里的中国</h2><p>★★★☆☆<br>可能因为是号称禁书所以下载来看的。这本书是余华青壮年时期对国家的记忆，对理解他的小说是有点帮助的。里面提到他看过太多的血腥和暴力，所以尽量在自己的作品里回避这些东西。</p><hr><h1 id="经济类"><a href="#经济类" class="headerlink" title="经济类"></a>经济类</h1><h2 id="21-世纪资本论"><a href="#21-世纪资本论" class="headerlink" title="21 世纪资本论"></a><a href="https://book.douban.com/subject/25947310/" target="_blank" rel="external">21 世纪资本论</a></h2><p>★★★★☆<br>全书主旨：长期来看，资本回报率（3-5%）大于经济增长率（1-2%）。这是作者研究了多国长期经济数据之后得出的结论。由于工资收入的增长直接受制于经济增长率，所以工资收入的增长小于资本回报，造成财富向少数人富集，导致马太效应。此书非常严谨，也就是极其啰嗦，相当于原始学术论文的合集，作者把所有数据全部罗列出来了，并且分章节用不同国家地区的数据进行论证，结论基本是重复的，可以大段跳读。在当下，此书就是为什么应该买房的理论依据。读完之后我才认识到我国之前两位数的经济增长原来是罕见现象，1-2% 才是全世界的常态。</p><h2 id="自由选择"><a href="#自由选择" class="headerlink" title="自由选择"></a><a href="https://book.douban.com/subject/3097539/" target="_blank" rel="external">自由选择</a></h2><p>★★★☆☆<br>论述为什么自由市场是最好的。虽然读来似乎很有道理，但是好像缺乏反面论证，记不太清了。另外我在这一方面并没有太多知识储备，无从评判。</p><hr><h1 id="小说"><a href="#小说" class="headerlink" title="小说"></a>小说</h1><h2 id="神们自己"><a href="#神们自己" class="headerlink" title="神们自己"></a><a href="https://book.douban.com/subject/26264967/" target="_blank" rel="external">神们自己</a></h2><p>★★★★☆<br>号称阿西莫夫成熟期最高水准之作。全书由三个相对独立的故事组成，最后的故事稍逊。每个故事独立来看非常精彩，不过放在一起缺乏整体感。</p><h2 id="1984"><a href="#1984" class="headerlink" title="1984"></a><a href="https://book.douban.com/subject/4820710/" target="_blank" rel="external">1984</a></h2><p>★★★★☆<br>经典重温。再次阅读依然震撼。</p><h2 id="我们"><a href="#我们" class="headerlink" title="我们"></a><a href="https://book.douban.com/subject/1434071/" target="_blank" rel="external">我们</a></h2><p>★★★☆☆<br>号称乌托邦小说鼻祖。不如《1984》。</p>]]></content:encoded>
      
      <comments>http://tuliren.github.io/2016/12/11/reading-2016-summary/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
